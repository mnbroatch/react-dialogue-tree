/*! For license information please see 464.82016eb0.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkreact_dialogue_tree=self.webpackChunkreact_dialogue_tree||[]).push([[464],{"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/getUrl.js":module=>{"use strict";module.exports=function(url,options){return options||(options={}),url?(url=String(url.__esModule?url.default:url),/^['"].*['"]$/.test(url)&&(url=url.slice(1,-1)),options.hash&&(url+=options.hash),/["'() \t\n]|(%20)/.test(url)||options.needQuotes?'"'.concat(url.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):url):url}},"./node_modules/css-loader/dist/runtime/sourceMaps.js":module=>{"use strict";module.exports=function(item){var content=item[1],cssMapping=item[3];if(!cssMapping)return content;if("function"==typeof btoa){var base64=btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),sourceMapping="/*# ".concat(data," */");return[content].concat([sourceMapping]).join("\n")}return[content].join("\n")}},"./node_modules/react-error-boundary/dist/react-error-boundary.umd.js":function(__unused_webpack_module,exports,__webpack_require__){!function(exports,React){"use strict";function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);return e&&Object.keys(e).forEach((function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}})),n.default=e,Object.freeze(n)}var React__namespace=_interopNamespace(React);function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,_setPrototypeOf(subClass,superClass)}var changedArray=function changedArray(a,b){return void 0===a&&(a=[]),void 0===b&&(b=[]),a.length!==b.length||a.some((function(item,index){return!Object.is(item,b[index])}))},initialState={error:null},ErrorBoundary=function(_React$Component){function ErrorBoundary(){for(var _this,_len=arguments.length,_args=new Array(_len),_key=0;_key<_len;_key++)_args[_key]=arguments[_key];return(_this=_React$Component.call.apply(_React$Component,[this].concat(_args))||this).state=initialState,_this.resetErrorBoundary=function(){for(var _this$props,_len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];null==_this.props.onReset||(_this$props=_this.props).onReset.apply(_this$props,args),_this.reset()},_this}_inheritsLoose(ErrorBoundary,_React$Component),ErrorBoundary.getDerivedStateFromError=function getDerivedStateFromError(error){return{error}};var _proto=ErrorBoundary.prototype;return _proto.reset=function reset(){this.setState(initialState)},_proto.componentDidCatch=function componentDidCatch(error,info){var _this$props$onError,_this$props2;null==(_this$props$onError=(_this$props2=this.props).onError)||_this$props$onError.call(_this$props2,error,info)},_proto.componentDidUpdate=function componentDidUpdate(prevProps,prevState){var _this$props$onResetKe,_this$props3,error=this.state.error,resetKeys=this.props.resetKeys;null!==error&&null!==prevState.error&&changedArray(prevProps.resetKeys,resetKeys)&&(null==(_this$props$onResetKe=(_this$props3=this.props).onResetKeysChange)||_this$props$onResetKe.call(_this$props3,prevProps.resetKeys,resetKeys),this.reset())},_proto.render=function render(){var error=this.state.error,_this$props4=this.props,fallbackRender=_this$props4.fallbackRender,FallbackComponent=_this$props4.FallbackComponent,fallback=_this$props4.fallback;if(null!==error){var _props={error,resetErrorBoundary:this.resetErrorBoundary};if(React__namespace.isValidElement(fallback))return fallback;if("function"==typeof fallbackRender)return fallbackRender(_props);if(FallbackComponent)return React__namespace.createElement(FallbackComponent,_props);throw new Error("react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop")}return this.props.children},ErrorBoundary}(React__namespace.Component);function withErrorBoundary(Component,errorBoundaryProps){var Wrapped=function Wrapped(props){return React__namespace.createElement(ErrorBoundary,errorBoundaryProps,React__namespace.createElement(Component,props))},name=Component.displayName||Component.name||"Unknown";return Wrapped.displayName="withErrorBoundary("+name+")",Wrapped}function useErrorHandler(givenError){var _React$useState=React__namespace.useState(null),error=_React$useState[0],setError=_React$useState[1];if(null!=givenError)throw givenError;if(null!=error)throw error;return setError}exports.ErrorBoundary=ErrorBoundary,exports.useErrorHandler=useErrorHandler,exports.withErrorBoundary=withErrorBoundary,Object.defineProperty(exports,"__esModule",{value:!0})}(exports,__webpack_require__("./node_modules/react/index.js"))},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":module=>{"use strict";var stylesInDOM=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDOM.length;i++)if(stylesInDOM[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var indexByIdentifier=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3],supports:item[4],layer:item[5]};if(-1!==indexByIdentifier)stylesInDOM[indexByIdentifier].references++,stylesInDOM[indexByIdentifier].updater(obj);else{var updater=addElementStyle(obj,options);options.byIndex=i,stylesInDOM.splice(i,0,{identifier,updater,references:1})}identifiers.push(identifier)}return identifiers}function addElementStyle(obj,options){var api=options.domAPI(options);api.update(obj);return function updater(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap&&newObj.supports===obj.supports&&newObj.layer===obj.layer)return;api.update(obj=newObj)}else api.remove()}}module.exports=function(list,options){var lastIdentifiers=modulesToDom(list=list||[],options=options||{});return function update(newList){newList=newList||[];for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDOM[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDOM[_index].references&&(stylesInDOM[_index].updater(),stylesInDOM.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}},"./node_modules/style-loader/dist/runtime/insertBySelector.js":module=>{"use strict";var memo={};module.exports=function insertBySelector(insert,style){var target=function getTarget(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}(insert);if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}},"./node_modules/style-loader/dist/runtime/insertStyleElement.js":module=>{"use strict";module.exports=function insertStyleElement(options){var element=document.createElement("style");return options.setAttributes(element,options.attributes),options.insert(element,options.options),element}},"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=function setAttributesWithoutAttributes(styleElement){var nonce=__webpack_require__.nc;nonce&&styleElement.setAttribute("nonce",nonce)}},"./node_modules/style-loader/dist/runtime/styleDomAPI.js":module=>{"use strict";module.exports=function domAPI(options){var styleElement=options.insertStyleElement(options);return{update:function update(obj){!function apply(styleElement,options,obj){var css="";obj.supports&&(css+="@supports (".concat(obj.supports,") {")),obj.media&&(css+="@media ".concat(obj.media," {"));var needLayer=void 0!==obj.layer;needLayer&&(css+="@layer".concat(obj.layer.length>0?" ".concat(obj.layer):""," {")),css+=obj.css,needLayer&&(css+="}"),obj.media&&(css+="}"),obj.supports&&(css+="}");var sourceMap=obj.sourceMap;sourceMap&&"undefined"!=typeof btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),options.styleTagTransform(css,styleElement,options.options)}(styleElement,options,obj)},remove:function remove(){!function removeStyleElement(styleElement){if(null===styleElement.parentNode)return!1;styleElement.parentNode.removeChild(styleElement)}(styleElement)}}}},"./node_modules/style-loader/dist/runtime/styleTagTransform.js":module=>{"use strict";module.exports=function styleTagTransform(css,styleElement){if(styleElement.styleSheet)styleElement.styleSheet.cssText=css;else{for(;styleElement.firstChild;)styleElement.removeChild(styleElement.firstChild);styleElement.appendChild(document.createTextNode(css))}}},"./node_modules/yarn-bound/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>yarn_bound_src});class Text{}class Shortcut{}class Conditional{}class Assignment{}class Literal{}class Expression{}class FunctionCall{}class Command{}const parser_nodes={types:{Text,Shortcut,Conditional,Assignment,Literal,Expression,FunctionCall,Command},DialogShortcutNode:class extends Shortcut{constructor(text,content,lineNo,hashtags=[],conditionalExpression){super(),this.type="DialogShortcutNode",this.text=text,this.content=content,this.lineNum=lineNo.first_line,this.hashtags=hashtags,this.conditionalExpression=conditionalExpression}},IfNode:class extends Conditional{constructor(expression,statement){super(),this.type="IfNode",this.expression=expression,this.statement=statement}},IfElseNode:class extends Conditional{constructor(expression,statement,elseStatement){super(),this.type="IfElseNode",this.expression=expression,this.statement=statement,this.elseStatement=elseStatement}},ElseNode:class extends Conditional{constructor(statement){super(),this.type="ElseNode",this.statement=statement}},ElseIfNode:class extends Conditional{constructor(expression,statement,elseStatement){super(),this.type="ElseIfNode",this.expression=expression,this.statement=statement,this.elseStatement=elseStatement}},GenericCommandNode:class extends Command{constructor(command,lineNo,hashtags=[]){super(),this.type="GenericCommandNode",this.command=command,this.hashtags=hashtags,this.lineNum=lineNo.first_line}},JumpCommandNode:class extends Command{constructor(destination){super(),this.type="JumpCommandNode",this.destination=destination}},StopCommandNode:class extends Command{constructor(){super(),this.type="StopCommandNode"}},TextNode:class extends Text{constructor(text,lineNo,hashtags=[]){super(),this.type="TextNode",this.text=text,this.lineNum=lineNo.first_line,this.hashtags=hashtags}},EscapedCharacterNode:class extends Text{constructor(text,lineNo,hashtags=[]){super(),this.type="EscapedCharacterNode",this.text=text,this.lineNum=lineNo.first_line,this.hashtags=hashtags}},NumericLiteralNode:class extends Literal{constructor(numericLiteral){super(),this.type="NumericLiteralNode",this.numericLiteral=numericLiteral}},StringLiteralNode:class extends Literal{constructor(stringLiteral){super(),this.type="StringLiteralNode",this.stringLiteral=stringLiteral}},BooleanLiteralNode:class extends Literal{constructor(booleanLiteral){super(),this.type="BooleanLiteralNode",this.booleanLiteral=booleanLiteral}},VariableNode:class extends Literal{constructor(variableName){super(),this.type="VariableNode",this.variableName=variableName}},UnaryMinusExpressionNode:class extends Expression{constructor(expression){super(),this.type="UnaryMinusExpressionNode",this.expression=expression}},ArithmeticExpressionAddNode:class extends Expression{constructor(expression1,expression2){super(),this.type="ArithmeticExpressionAddNode",this.expression1=expression1,this.expression2=expression2}},ArithmeticExpressionMinusNode:class extends Expression{constructor(expression1,expression2){super(),this.type="ArithmeticExpressionMinusNode",this.expression1=expression1,this.expression2=expression2}},ArithmeticExpressionMultiplyNode:class extends Expression{constructor(expression1,expression2){super(),this.type="ArithmeticExpressionMultiplyNode",this.expression1=expression1,this.expression2=expression2}},ArithmeticExpressionExponentNode:class extends Expression{constructor(expression1,expression2){super(),this.type="ArithmeticExpressionExponentNode",this.expression1=expression1,this.expression2=expression2}},ArithmeticExpressionDivideNode:class extends Expression{constructor(expression1,expression2){super(),this.type="ArithmeticExpressionDivideNode",this.expression1=expression1,this.expression2=expression2}},ArithmeticExpressionModuloNode:class extends Expression{constructor(expression1,expression2){super(),this.type="ArithmeticExpressionModuloNode",this.expression1=expression1,this.expression2=expression2}},NegatedBooleanExpressionNode:class extends Expression{constructor(expression){super(),this.type="NegatedBooleanExpressionNode",this.expression=expression}},BooleanOrExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="BooleanOrExpressionNode",this.expression1=expression1,this.expression2=expression2}},BooleanAndExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="BooleanAndExpressionNode",this.expression1=expression1,this.expression2=expression2}},BooleanXorExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="BooleanXorExpressionNode",this.expression1=expression1,this.expression2=expression2}},EqualToExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="EqualToExpressionNode",this.expression1=expression1,this.expression2=expression2}},NotEqualToExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="NotEqualToExpressionNode",this.expression1=expression1,this.expression2=expression2}},GreaterThanExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="GreaterThanExpressionNode",this.expression1=expression1,this.expression2=expression2}},GreaterThanOrEqualToExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="GreaterThanOrEqualToExpressionNode",this.expression1=expression1,this.expression2=expression2}},LessThanExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="LessThanExpressionNode",this.expression1=expression1,this.expression2=expression2}},LessThanOrEqualToExpressionNode:class extends Expression{constructor(expression1,expression2){super(),this.type="LessThanOrEqualToExpressionNode",this.expression1=expression1,this.expression2=expression2}},SetVariableEqualToNode:class extends Assignment{constructor(variableName,expression){super(),this.type="SetVariableEqualToNode",this.variableName=variableName,this.expression=expression}},FunctionCallNode:class extends FunctionCall{constructor(functionName,args,lineNo,hashtags=[]){super(),this.type="FunctionCallNode",this.functionName=functionName,this.args=args,this.lineNum=lineNo.first_line,this.hashtags=hashtags}},InlineExpressionNode:class extends Expression{constructor(expression,lineNo,hashtags=[]){super(),this.type="InlineExpressionNode",this.expression=expression,this.lineNum=lineNo.first_line,this.hashtags=hashtags}}},tokens={Whitespace:null,Indent:null,Dedent:null,EndOfLine:/\n/,EndOfInput:null,Number:/-?[0-9]+(\.[0-9+])?/,String:/"([^"\\]*(?:\\.[^"\\]*)*)"/,BeginCommand:/<</,EndCommand:/>>/,Variable:/\$([A-Za-z0-9_.])+/,ShortcutOption:/->/,Hashtag:/#([^(\s|#|//)]+)/,Comment:/\/\/.*/,OptionStart:/\[\[/,OptionDelimit:/\|/,OptionEnd:/\]\]/,If:/if(?!\w)/,ElseIf:/elseif(?!\w)/,Else:/else(?!\w)/,EndIf:/endif(?!\w)/,Jump:/jump(?!\w)/,Stop:/stop(?!\w)/,Set:/set(?!\w)/,Declare:/declare(?!\w)/,As:/as(?!\w)/,ExplicitType:/(String|Number|Bool)(?=>>)/,True:/true(?!\w)/,False:/false(?!\w)/,Null:/null(?!\w)/,LeftParen:/\(/,RightParen:/\)/,Comma:/,/,UnaryMinus:/-(?!\s)/,EqualTo:/(==|is(?!\w)|eq(?!\w))/,GreaterThan:/(>|gt(?!\w))/,GreaterThanOrEqualTo:/(>=|gte(?!\w))/,LessThan:/(<|lt(?!\w))/,LessThanOrEqualTo:/(<=|lte(?!\w))/,NotEqualTo:/(!=|neq(?!\w))/,Or:/(\|\||or(?!\w))/,And:/(&&|and(?!\w))/,Xor:/(\^|xor(?!\w))/,Not:/(!|not(?!\w))/,EqualToOrAssign:/(=|to(?!\w))/,Add:/\+/,Minus:/-/,Exponent:/\*\*/,Multiply:/\*/,Divide:/\//,Modulo:/%/,AddAssign:/\+=/,MinusAssign:/-=/,MultiplyAssign:/\*=/,DivideAssign:/\/=/,Identifier:/[a-zA-Z0-9_:.]+/,EscapedCharacter:/\\./,Text:/[^\\]/,BeginInlineExp:/{/,EndInlineExp:/}/};const lexer_state=class LexerState{constructor(){this.transitions=[],this.textRule=null,this.isTrackingNextIndentation=!1}addTransition(token,state,delimitsText){return this.transitions.push({token,regex:tokens[token],state:state||null,delimitsText:delimitsText||!1}),this}addTextRule(type,state){if(this.textRule)throw new Error("Cannot add more than one text rule to a state.");const rules=[];this.transitions.forEach((transition=>{transition.delimitsText&&rules.push(`(${transition.regex.source})`)}));const textPattern=`((?!${rules.join("|")}).)+`;return this.addTransition(type,state),this.textRule=this.transitions[this.transitions.length-1],this.textRule.regex=new RegExp(textPattern),this}setTrackNextIndentation(track){return this.isTrackingNextIndentation=track,this}};const states={makeStates:function makeStates(){return{base:(new lexer_state).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","command",!0).addTransition("BeginInlineExp","inlineExpression",!0).addTransition("ShortcutOption","shortcutOption").addTextRule("Text"),shortcutOption:(new lexer_state).setTrackNextIndentation(!0).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","expression",!0).addTransition("BeginInlineExp","inlineExpressionInShortcut",!0).addTextRule("Text","base"),command:(new lexer_state).addTransition("If","expression").addTransition("Else").addTransition("ElseIf","expression").addTransition("EndIf").addTransition("Set","assignment").addTransition("Declare","declare").addTransition("Jump","jump").addTransition("Stop","stop").addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0).addTextRule("Text"),commandArg:(new lexer_state).addTextRule("Text"),commandParenArgOrExpression:(new lexer_state).addTransition("EndCommand","base",!0).addTransition("LeftParen","expression").addTransition("Variable","expression").addTransition("Number","expression").addTransition("String").addTransition("True").addTransition("False").addTransition("Null").addTransition("RightParen"),assignment:(new lexer_state).addTransition("Variable").addTransition("EqualToOrAssign","expression"),declare:(new lexer_state).addTransition("Variable").addTransition("EndCommand","base").addTransition("EqualToOrAssign","expression"),jump:(new lexer_state).addTransition("Identifier").addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0),stop:(new lexer_state).addTransition("EndCommand","base",!0),expression:(new lexer_state).addTransition("As").addTransition("ExplicitType").addTransition("EndCommand","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule(),inlineExpression:(new lexer_state).addTransition("EndInlineExp","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInCommand:(new lexer_state).addTransition("EndInlineExp","command").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInShortcut:(new lexer_state).addTransition("EndInlineExp","shortcutOption").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base")}}};const lexer=class Lexer{constructor(){this.states=states.makeStates(),this.state="base",this.originalText="",this.lines=[],this.indentation=[[0,!1]],this.shouldTrackNextIndentation=!1,this.previousLevelOfIndentation=0,this.reset()}reset(){this.yytext="",this.yylloc={first_column:1,first_line:1,last_column:1,last_line:1},this.yylineno=1}lex(){if(this.isAtTheEndOfText()){this.yytext="";const indent=this.indentation.pop();return indent&&indent[1]?"Dedent":"EndOfInput"}return this.isAtTheEndOfLine()?(this.advanceLine(),"EndOfLine"):this.lexNextTokenOnCurrentLine()}advanceLine(){this.yylineno+=1;const currentLine=this.getCurrentLine().replace(/\t/,"    ");this.lines[this.yylineno-1]=currentLine,this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],this.yytext="",this.yylloc={first_column:1,first_line:this.yylineno,last_column:1,last_line:this.yylineno}}lexNextTokenOnCurrentLine(){const thisIndentation=this.getCurrentLineIndentation();if(this.shouldTrackNextIndentation&&thisIndentation>this.previousLevelOfIndentation)return this.indentation.push([thisIndentation,!0]),this.shouldTrackNextIndentation=!1,this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=thisIndentation,this.yytext="","Indent";if(thisIndentation<this.getLastRecordedIndentation()[0]){if(this.indentation.pop()[1])return this.yytext="",this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],"Dedent";this.lexNextTokenOnCurrentLine()}thisIndentation===this.previousLevelOfIndentation&&1===this.yylloc.last_column&&(this.yylloc.last_column+=thisIndentation);const rules=this.getState().transitions;for(let i=0,len=rules.length;i<len;i+=1){const rule=rules[i],match=this.getCurrentLine().substring(this.yylloc.last_column-1).match(rule.regex);if(null!==match&&0===match.index){const matchedText=match[0];this.yytext=this.getCurrentLine().substr(this.yylloc.last_column-1,matchedText.length),"String"===rule.token&&(this.yytext=this.yytext.substring(1,this.yytext.length-1)),this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=matchedText.length,rule.state&&(this.setState(rule.state),this.shouldTrackNextIndentation&&this.getLastRecordedIndentation()[0]<thisIndentation&&this.indentation.push([thisIndentation,!1]));const nextState=this.states[rule.state],nextStateHasText=!rule.state||nextState.transitions.find((transition=>"Text"===transition.token));if("EndInlineExp"!==rule.token&&"EscapedCharacter"!==rule.token||!nextStateHasText){const spaceMatch=this.getCurrentLine().substring(this.yylloc.last_column-1).match(/^\s*/);spaceMatch[0]&&(this.yylloc.last_column+=spaceMatch[0].length)}return rule.token}}throw new Error(`Invalid syntax in: ${this.getCurrentLine()}`)}setState(state){if(void 0===this.states[state])throw new Error(`Cannot set the unknown state [${state}]`);this.state=state,this.getState().isTrackingNextIndentation&&(this.shouldTrackNextIndentation=!0)}setInput(text){this.originalText=text.replace(/(\r\n)/g,"\n").replace(/\r/g,"\n").replace(/[\n\r]+$/,""),this.lines=this.originalText.split("\n"),this.reset()}getState(){return this.states[this.state]}getCurrentLine(){return this.lines[this.yylineno-1]}getCurrentLineIndentation(){return this.getCurrentLine().match(/^(\s*)/g)[0].length}getLastRecordedIndentation(){return 0===this.indentation.length?[0,!1]:this.indentation[this.indentation.length-1]}isAtTheEndOfText(){return this.isAtTheEndOfLine()&&this.yylloc.first_line>=this.lines.length}isAtTheEndOfLine(){return this.yylloc.last_column>this.getCurrentLine().length}};var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,16],$V1=[1,17],$V2=[1,12],$V3=[1,19],$V4=[1,18],$V5=[5,18,19,23,34,36,77],$V6=[1,23],$V7=[1,24],$V8=[1,26],$V9=[1,27],$Va=[5,14,16,18,19,21,23,34,36,77],$Vb=[1,30],$Vc=[1,34],$Vd=[1,35],$Ve=[1,36],$Vf=[1,37],$Vg=[5,14,16,18,19,21,23,26,34,36,77],$Vh=[1,50],$Vi=[1,49],$Vj=[1,44],$Vk=[1,45],$Vl=[1,46],$Vm=[1,51],$Vn=[1,52],$Vo=[1,53],$Vp=[1,54],$Vq=[1,55],$Vr=[5,16,18,19,23,34,36,77],$Vs=[1,71],$Vt=[1,72],$Vu=[1,73],$Vv=[1,74],$Vw=[1,75],$Vx=[1,76],$Vy=[1,77],$Vz=[1,78],$VA=[1,79],$VB=[1,80],$VC=[1,81],$VD=[1,82],$VE=[1,83],$VF=[1,84],$VG=[1,85],$VH=[26,46,51,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,70,78],$VI=[26,46,51,53,54,55,56,57,60,61,62,63,64,65,66,67,68,70,78],$VJ=[26,46,51,70,78],$VK=[1,122],$VL=[1,123],$VM=[26,46,51,53,54,60,61,62,63,64,65,66,67,68,70,78],$VN=[26,46,51,60,61,62,63,64,65,66,67,68,70,78],$VO=[51,70],$VP=[16,18,19,23,34,77],parser={trace:function trace(){},yy:{},symbols_:{error:2,node:3,statements:4,EndOfInput:5,conditionalBlock:6,statement:7,text:8,shortcut:9,genericCommand:10,assignmentCommand:11,jumpCommand:12,stopCommand:13,Comment:14,hashtags:15,EndOfLine:16,textNode:17,Text:18,EscapedCharacter:19,inlineExpression:20,Hashtag:21,conditional:22,BeginCommand:23,If:24,expression:25,EndCommand:26,EndIf:27,additionalConditionalBlocks:28,else:29,Else:30,elseif:31,ElseIf:32,shortcutOption:33,ShortcutOption:34,Indent:35,Dedent:36,Jump:37,Identifier:38,Stop:39,setCommandInner:40,declareCommandInner:41,Set:42,Variable:43,EqualToOrAssign:44,Declare:45,As:46,ExplicitType:47,functionArgument:48,functionCall:49,LeftParen:50,RightParen:51,UnaryMinus:52,Add:53,Minus:54,Exponent:55,Multiply:56,Divide:57,Modulo:58,Not:59,Or:60,And:61,Xor:62,EqualTo:63,NotEqualTo:64,GreaterThan:65,GreaterThanOrEqualTo:66,LessThan:67,LessThanOrEqualTo:68,parenExpressionArgs:69,Comma:70,literal:71,True:72,False:73,Number:74,String:75,Null:76,BeginInlineExp:77,EndInlineExp:78,$accept:0,$end:1},terminals_:{2:"error",5:"EndOfInput",14:"Comment",16:"EndOfLine",18:"Text",19:"EscapedCharacter",21:"Hashtag",23:"BeginCommand",24:"If",26:"EndCommand",27:"EndIf",30:"Else",32:"ElseIf",34:"ShortcutOption",35:"Indent",36:"Dedent",37:"Jump",38:"Identifier",39:"Stop",42:"Set",43:"Variable",44:"EqualToOrAssign",45:"Declare",46:"As",47:"ExplicitType",50:"LeftParen",51:"RightParen",52:"UnaryMinus",53:"Add",54:"Minus",55:"Exponent",56:"Multiply",57:"Divide",58:"Modulo",59:"Not",60:"Or",61:"And",62:"Xor",63:"EqualTo",64:"NotEqualTo",65:"GreaterThan",66:"GreaterThanOrEqualTo",67:"LessThan",68:"LessThanOrEqualTo",70:"Comma",72:"True",73:"False",74:"Number",75:"String",76:"Null",77:"BeginInlineExp",78:"EndInlineExp"},productions_:[0,[3,2],[4,1],[4,2],[4,1],[4,2],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,2],[7,2],[7,2],[17,1],[17,1],[8,1],[8,1],[8,2],[15,1],[15,2],[22,4],[6,6],[6,4],[6,2],[29,3],[29,2],[31,4],[31,2],[28,5],[28,5],[28,3],[33,2],[33,3],[33,2],[33,2],[33,3],[33,2],[9,1],[9,5],[10,3],[12,4],[12,4],[13,3],[11,3],[11,3],[40,4],[41,4],[41,6],[25,1],[25,1],[25,3],[25,2],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,2],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[49,3],[49,4],[69,3],[69,1],[48,1],[48,1],[48,1],[71,1],[71,1],[71,1],[71,1],[71,1],[20,3]],performAction:function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$){var $0=$$.length-1;switch(yystate){case 1:return $$[$0-1].flat();case 2:case 4:case 7:case 8:case 9:case 10:case 11:case 17:case 18:case 73:this.$=[$$[$0]];break;case 3:case 19:this.$=$$[$0-1].concat($$[$0]);break;case 5:this.$=$$[$0-1].concat([$$[$0]]);break;case 6:case 51:case 50:case 74:case 75:this.$=$$[$0];break;case 12:case 14:case 25:case 28:case 29:case 45:case 52:case 22:case 36:case 38:this.$=$$[$0-1];break;case 13:this.$=$$[$0-1].map((s=>Object.assign(s,{hashtags:$$[$0]})));break;case 15:this.$=new yy.TextNode($$[$0],this._$);break;case 16:this.$=new yy.EscapedCharacterNode($$[$0],this._$);break;case 20:this.$=[$$[$0].substring(1)];break;case 21:this.$=[$$[$0-1].substring(1)].concat($$[$0]);break;case 23:this.$=new yy.IfNode($$[$0-5],$$[$0-3].flat());break;case 24:this.$=new yy.IfElseNode($$[$0-3],$$[$0-1].flat(),$$[$0]);break;case 26:case 27:this.$=void 0;break;case 30:this.$=new yy.ElseNode($$[$0-3].flat());break;case 31:this.$=new yy.ElseIfNode($$[$0-4],$$[$0-3].flat());break;case 32:this.$=new yy.ElseIfNode($$[$0-2],$$[$0-1].flat(),$$[$0]);break;case 33:this.$={text:$$[$0]};break;case 34:this.$={text:$$[$0-1],conditional:$$[$0]};break;case 35:this.$={...$$[$0-1],hashtags:$$[$0]};break;case 37:this.$={...$$[$0-2],hashtags:$$[$0-1]};break;case 39:this.$=new yy.DialogShortcutNode($$[$0].text,void 0,this._$,$$[$0].hashtags,$$[$0].conditional);break;case 40:this.$=new yy.DialogShortcutNode($$[$0-4].text,$$[$0-1].flat(),this._$,$$[$0-4].hashtags,$$[$0-4].conditional);break;case 41:this.$=new yy.GenericCommandNode($$[$0-1],this._$);break;case 42:case 43:this.$=new yy.JumpCommandNode($$[$0-1]);break;case 44:this.$=new yy.StopCommandNode;break;case 46:this.$=null;break;case 47:this.$=new yy.SetVariableEqualToNode($$[$0-2].substring(1),$$[$0]);break;case 48:this.$=null,yy.registerDeclaration($$[$0-2].substring(1),$$[$0]);break;case 49:this.$=null,yy.registerDeclaration($$[$0-4].substring(1),$$[$0-2],$$[$0]);break;case 53:this.$=new yy.UnaryMinusExpressionNode($$[$0]);break;case 54:this.$=new yy.ArithmeticExpressionAddNode($$[$0-2],$$[$0]);break;case 55:this.$=new yy.ArithmeticExpressionMinusNode($$[$0-2],$$[$0]);break;case 56:this.$=new yy.ArithmeticExpressionExponentNode($$[$0-2],$$[$0]);break;case 57:this.$=new yy.ArithmeticExpressionMultiplyNode($$[$0-2],$$[$0]);break;case 58:this.$=new yy.ArithmeticExpressionDivideNode($$[$0-2],$$[$0]);break;case 59:this.$=new yy.ArithmeticExpressionModuloNode($$[$0-2],$$[$0]);break;case 60:this.$=new yy.NegatedBooleanExpressionNode($$[$0]);break;case 61:this.$=new yy.BooleanOrExpressionNode($$[$0-2],$$[$0]);break;case 62:this.$=new yy.BooleanAndExpressionNode($$[$0-2],$$[$0]);break;case 63:this.$=new yy.BooleanXorExpressionNode($$[$0-2],$$[$0]);break;case 64:this.$=new yy.EqualToExpressionNode($$[$0-2],$$[$0]);break;case 65:this.$=new yy.NotEqualToExpressionNode($$[$0-2],$$[$0]);break;case 66:this.$=new yy.GreaterThanExpressionNode($$[$0-2],$$[$0]);break;case 67:this.$=new yy.GreaterThanOrEqualToExpressionNode($$[$0-2],$$[$0]);break;case 68:this.$=new yy.LessThanExpressionNode($$[$0-2],$$[$0]);break;case 69:this.$=new yy.LessThanOrEqualToExpressionNode($$[$0-2],$$[$0]);break;case 70:this.$=new yy.FunctionCallNode($$[$0-2],[],this._$);break;case 71:this.$=new yy.FunctionCallNode($$[$0-3],$$[$0-1],this._$);break;case 72:this.$=$$[$0-2].concat([$$[$0]]);break;case 76:this.$=new yy.VariableNode($$[$0].substring(1));break;case 77:case 78:this.$=new yy.BooleanLiteralNode($$[$0]);break;case 79:this.$=new yy.NumericLiteralNode($$[$0]);break;case 80:this.$=new yy.StringLiteralNode($$[$0]);break;case 81:this.$=new yy.NullLiteralNode($$[$0]);break;case 82:this.$=new yy.InlineExpressionNode($$[$0-1],this._$)}},table:[{3:1,4:2,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:$V0,19:$V1,20:14,22:5,23:$V2,33:15,34:$V3,77:$V4},{1:[3]},{5:[1,20],6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:$V0,19:$V1,20:14,22:5,23:$V2,33:15,34:$V3,77:$V4},o($V5,[2,2],{16:$V6}),o($V5,[2,4],{15:25,14:$V7,16:$V8,21:$V9}),{16:[1,28]},o([5,14,16,21,23,34,36],[2,6],{17:13,20:14,8:29,18:$V0,19:$V1,77:$V4}),o($Va,[2,7]),o($Va,[2,8]),o($Va,[2,9]),o($Va,[2,10]),o($Va,[2,11]),{8:31,17:13,18:$V0,19:$V1,20:14,24:$Vb,37:$Vc,39:$Vd,40:32,41:33,42:$Ve,45:$Vf,77:$V4},o($Vg,[2,17]),o($Vg,[2,18]),o($V5,[2,39],{15:39,14:[1,40],16:[1,38],21:$V9}),o($Vg,[2,15]),o($Vg,[2,16]),{20:47,25:41,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{8:56,17:13,18:$V0,19:$V1,20:14,77:$V4},{1:[2,1]},o($V5,[2,3],{16:$V6}),o($V5,[2,5],{15:25,14:$V7,16:$V8,21:$V9}),o($Vr,[2,25]),o($Va,[2,12]),o($Va,[2,13]),o($Va,[2,14]),o([5,14,16,18,19,23,34,36,77],[2,20],{15:57,21:$V9}),{4:58,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:$V0,19:$V1,20:14,22:5,23:$V2,33:15,34:$V3,77:$V4},o([5,14,16,21,23,26,34,36],[2,19],{17:13,20:14,8:29,18:$V0,19:$V1,77:$V4}),{20:47,25:59,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{8:29,17:13,18:$V0,19:$V1,20:14,26:[1,60],77:$V4},{26:[1,61]},{26:[1,62]},{20:64,38:[1,63],77:$V4},{26:[1,65]},{43:[1,66]},{43:[1,67]},o($Va,[2,38],{35:[1,68]}),o([5,16,18,19,21,23,34,36,77],[2,35],{14:[1,69]}),o($Va,[2,36]),{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG,78:[1,70]},o($VH,[2,50]),o($VH,[2,51]),{20:47,25:86,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:87,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:88,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},o($VH,[2,74]),o($VH,[2,75]),o($VH,[2,76]),{50:[1,89]},o($VH,[2,77]),o($VH,[2,78]),o($VH,[2,79]),o($VH,[2,80]),o($VH,[2,81]),o([5,14,16,21,34,36],[2,33],{17:13,20:14,8:29,22:90,18:$V0,19:$V1,23:[1,91],77:$V4}),o($Va,[2,21]),{6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:$V0,19:$V1,20:14,22:5,23:[1,92],28:93,29:94,31:95,33:15,34:$V3,77:$V4},{26:[1,96],53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG},o($Va,[2,41]),o($Va,[2,45]),o($Va,[2,46]),{26:[1,97]},{26:[1,98]},o($Va,[2,44]),{44:[1,99]},{44:[1,100]},{4:101,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:$V0,19:$V1,20:14,22:5,23:$V2,33:15,34:$V3,77:$V4},o($Va,[2,37]),o([5,14,16,18,19,21,23,26,34,36,46,51,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,70,77,78],[2,82]),{20:47,25:102,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:103,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:104,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:105,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:106,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:107,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:108,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:109,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:110,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:111,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:112,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:113,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:114,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:115,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:116,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{51:[1,117],53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG},o($VI,[2,53],{58:$Vx}),o($VJ,[2,60],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG}),{20:47,25:120,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,51:[1,118],52:$Vk,59:$Vl,69:119,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},o($Va,[2,34]),{24:$Vb},{8:31,17:13,18:$V0,19:$V1,20:14,24:$Vb,27:[1,121],30:$VK,32:$VL,37:$Vc,39:$Vd,40:32,41:33,42:$Ve,45:$Vf,77:$V4},o($Vr,[2,24]),{4:124,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,125],17:13,18:$V0,19:$V1,20:14,22:5,23:$V2,33:15,34:$V3,77:$V4},{4:126,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,127],17:13,18:$V0,19:$V1,20:14,22:5,23:$V2,33:15,34:$V3,77:$V4},o($Va,[2,22]),o($Va,[2,42]),o($Va,[2,43]),{20:47,25:128,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{20:47,25:129,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:$V0,19:$V1,20:14,22:5,23:$V2,33:15,34:$V3,36:[1,130],77:$V4},o($VM,[2,54],{55:$Vu,56:$Vv,57:$Vw,58:$Vx}),o($VM,[2,55],{55:$Vu,56:$Vv,57:$Vw,58:$Vx}),o($VI,[2,56],{58:$Vx}),o($VI,[2,57],{58:$Vx}),o($VI,[2,58],{58:$Vx}),o($VJ,[2,59],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG}),o([26,46,51,60,70,78],[2,61],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG}),o([26,46,51,60,61,70,78],[2,62],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG}),o([26,46,51,60,61,62,70,78],[2,63],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG}),o($VN,[2,64],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx}),o($VN,[2,65],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx}),o($VN,[2,66],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx}),o($VN,[2,67],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx}),o($VN,[2,68],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx}),o($VN,[2,69],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx}),o($VH,[2,52]),o($VH,[2,70]),{51:[1,131],70:[1,132]},o($VO,[2,73],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG}),{26:[1,133]},{26:[1,134]},{20:47,25:135,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},{6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:$V0,19:$V1,20:14,22:5,23:[1,136],33:15,34:$V3,77:$V4},o($VP,[2,27]),{6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:$V0,19:$V1,20:14,22:5,23:[1,137],28:138,29:94,31:95,33:15,34:$V3,77:$V4},o($VP,[2,29]),{26:[2,47],53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG},{26:[2,48],46:[1,139],53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG},o($Va,[2,40]),o($VH,[2,71]),{20:47,25:140,38:$Vh,43:$Vi,48:42,49:43,50:$Vj,52:$Vk,59:$Vl,71:48,72:$Vm,73:$Vn,74:$Vo,75:$Vp,76:$Vq,77:$V4},o($Vr,[2,23]),o($VP,[2,26]),{26:[1,141],53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG},{8:31,17:13,18:$V0,19:$V1,20:14,24:$Vb,27:[1,142],37:$Vc,39:$Vd,40:32,41:33,42:$Ve,45:$Vf,77:$V4},{8:31,17:13,18:$V0,19:$V1,20:14,24:$Vb,27:[1,143],30:$VK,32:$VL,37:$Vc,39:$Vd,40:32,41:33,42:$Ve,45:$Vf,77:$V4},o($Vr,[2,32]),{47:[1,144]},o($VO,[2,72],{53:$Vs,54:$Vt,55:$Vu,56:$Vv,57:$Vw,58:$Vx,60:$Vy,61:$Vz,62:$VA,63:$VB,64:$VC,65:$VD,66:$VE,67:$VF,68:$VG}),o($VP,[2,28]),{26:[1,145]},{26:[1,146]},{26:[2,49]},o($Vr,[2,30]),o($Vr,[2,31])],defaultActions:{20:[2,1],144:[2,49]},parseError:function parseError(str,hash){if(!hash.recoverable){var error=new Error(str);throw error.hash=hash,error}this.trace(str)},parse:function parse(input){var self=this,stack=[0],vstack=[null],lstack=[],table=this.table,yytext="",yylineno=0,yyleng=0,recovering=0,TERROR=2,EOF=1,args=lstack.slice.call(arguments,1),lexer=Object.create(this.lexer),sharedState={yy:{}};for(var k in this.yy)Object.prototype.hasOwnProperty.call(this.yy,k)&&(sharedState.yy[k]=this.yy[k]);lexer.setInput(input,sharedState.yy),sharedState.yy.lexer=lexer,sharedState.yy.parser=this,void 0===lexer.yylloc&&(lexer.yylloc={});var yyloc=lexer.yylloc;lstack.push(yyloc);var ranges=lexer.options&&lexer.options.ranges;"function"==typeof sharedState.yy.parseError?this.parseError=sharedState.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var symbol,preErrorSymbol,state,action,r,p,len,newState,expected,lex=function(){var token;return"number"!=typeof(token=lexer.lex()||EOF)&&(token=self.symbols_[token]||token),token},yyval={};;){if(state=stack[stack.length-1],this.defaultActions[state]?action=this.defaultActions[state]:(null==symbol&&(symbol=lex()),action=table[state]&&table[state][symbol]),void 0===action||!action.length||!action[0]){var errStr="";for(p in expected=[],table[state])this.terminals_[p]&&p>TERROR&&expected.push("'"+this.terminals_[p]+"'");errStr=lexer.showPosition?"Parse error on line "+(yylineno+1)+":\n"+lexer.showPosition()+"\nExpecting "+expected.join(", ")+", got '"+(this.terminals_[symbol]||symbol)+"'":"Parse error on line "+(yylineno+1)+": Unexpected "+(symbol==EOF?"end of input":"'"+(this.terminals_[symbol]||symbol)+"'"),this.parseError(errStr,{text:lexer.match,token:this.terminals_[symbol]||symbol,line:lexer.yylineno,loc:yyloc,expected})}if(action[0]instanceof Array&&action.length>1)throw new Error("Parse Error: multiple actions possible at state: "+state+", token: "+symbol);switch(action[0]){case 1:stack.push(symbol),vstack.push(lexer.yytext),lstack.push(lexer.yylloc),stack.push(action[1]),symbol=null,preErrorSymbol?(symbol=preErrorSymbol,preErrorSymbol=null):(yyleng=lexer.yyleng,yytext=lexer.yytext,yylineno=lexer.yylineno,yyloc=lexer.yylloc,recovering>0&&recovering--);break;case 2:if(len=this.productions_[action[1]][1],yyval.$=vstack[vstack.length-len],yyval._$={first_line:lstack[lstack.length-(len||1)].first_line,last_line:lstack[lstack.length-1].last_line,first_column:lstack[lstack.length-(len||1)].first_column,last_column:lstack[lstack.length-1].last_column},ranges&&(yyval._$.range=[lstack[lstack.length-(len||1)].range[0],lstack[lstack.length-1].range[1]]),void 0!==(r=this.performAction.apply(yyval,[yytext,yyleng,yylineno,sharedState.yy,action[1],vstack,lstack].concat(args))))return r;len&&(stack=stack.slice(0,-1*len*2),vstack=vstack.slice(0,-1*len),lstack=lstack.slice(0,-1*len)),stack.push(this.productions_[action[1]][0]),vstack.push(yyval.$),lstack.push(yyval._$),newState=table[stack[stack.length-2]][stack[stack.length-1]],stack.push(newState);break;case 3:return!0}}return!0}};function Parser(){this.yy={}}Parser.prototype=parser,parser.Parser=Parser,parser.lexer=new lexer,parser.yy=parser_nodes,parser.yy.declarations={},parser.yy.parseError=function parseError(e){throw e},parser.yy.registerDeclaration=function registerDeclaration(variableName,expression,explicitType){if(!this.areDeclarationsHandled){if(this.declarations[variableName])throw new Error(`Duplicate declaration found for variable: ${variableName}`);this.declarations[variableName]={variableName,expression,explicitType}}};const parser_parser=parser;class Result{}class OptionResult extends Result{constructor(text,isAvailable=!0,hashtags=[],metadata){super(),this.text=text,this.isAvailable=isAvailable,this.hashtags=hashtags,this.metadata=metadata}}const results={Result,TextResult:class TextResult extends Result{constructor(text,hashtags,metadata){super(),this.text=text,this.hashtags=hashtags,this.metadata=metadata}},CommandResult:class CommandResult extends Result{constructor(command,hashtags,metadata){super(),this.command=command,this.hashtags=hashtags,this.metadata=metadata}},OptionsResult:class OptionsResult extends Result{constructor(options,metadata){super(),this.options=options.map((s=>new OptionResult(s.text,s.isAvailable,s.hashtags))),this.metadata=metadata}select(index=-1){if(index<0||index>=this.options.length)throw new Error(`Cannot select option #${index}, there are ${this.options.length} options`);this.selected=index}}};const default_variable_storage=class DefaultVariableStorage{constructor(){this.data={}}set(name,value){this.data[name]=value}get(name){return this.data[name]}};const nodeTypes=parser_nodes.types;const runner={Runner:class Runner{constructor(){this.noEscape=!1,this.yarnNodes={},this.variables=new default_variable_storage,this.functions={}}load(dialogue){if(!dialogue)throw new Error("No dialogue supplied");let nodes;nodes="string"==typeof dialogue?function convertYarnToJS(content){const objects=[],lines=content.split(/\r?\n+/).filter((line=>!line.match(/^\s*$/)));let filetags,obj=null,readingBody=!1,leadingSpace="",i=0;for(;"#"===lines[i].trim()[0];)filetags||(filetags=[]),filetags.push(lines[i].trim().substr(1)),i+=1;for(;i<lines.length;i+=1)if("==="===lines[i].trim())readingBody=!1,filetags&&(obj.filetags=filetags),objects.push(obj),obj=null;else if(readingBody)obj.body+=`${lines[i].replace(leadingSpace,"")}\n`;else if("---"===lines[i].trim())readingBody=!0,obj.body="",leadingSpace=lines[i].match(/^\s*/)[0];else if(lines[i].indexOf(":")>-1){const[key,value]=lines[i].split(":"),trimmedKey=key.trim(),trimmedValue=value.trim();if("body"!==trimmedKey){if(null==obj&&(obj={}),obj[trimmedKey])throw new Error(`Duplicate tag on node: ${trimmedKey}`);obj[trimmedKey]=trimmedValue}}return objects}(dialogue):dialogue,nodes.forEach((node=>{if(!node.title)throw new Error(`Node needs a title: ${JSON.stringify(node)}`);if(node.title.split(".").length>1)throw new Error(`Node title cannot contain a dot: ${node.title}`);if(!node.body)throw new Error(`Node needs a body: ${JSON.stringify(node)}`);if(this.yarnNodes[node.title])throw new Error(`Duplicate node title: ${node.title}`);this.yarnNodes[node.title]=node})),parser_parser.yy.areDeclarationsHandled=!1,parser_parser.yy.declarations={},this.handleDeclarations(nodes),parser_parser.yy.areDeclarationsHandled=!0}setVariableStorage(storage){if("function"!=typeof storage.set||"function"!=typeof storage.get)throw new Error('Variable Storage object must contain both a "set" and "get" function');this.variables=storage}handleDeclarations(nodes){const exampleValues={Number:0,String:"",Boolean:!1},declareLines=nodes.reduce(((acc,node)=>[...acc,...node.body.split(/\r?\n+/)]),[]).reduce(((acc,line)=>line.match(/^<<declare .+>>/)?[...acc,line]:acc),[]);declareLines.length&&parser_parser.parse(declareLines.join("\n")),Object.entries(parser_parser.yy.declarations).forEach((([variableName,{expression,explicitType}])=>{const value=this.evaluateExpressionOrLiteral(expression);if(explicitType&&typeof value!=typeof exampleValues[explicitType])throw new Error(`Cannot declare value ${value} as type ${explicitType} for variable ${variableName}`);this.variables.get(variableName)||this.variables.set(variableName,value)}))}registerFunction(name,func){if("function"!=typeof func)throw new Error("Registered function must be...well...a function");this.functions[name]=func}*run(startNode){let jumpTo=startNode;for(;jumpTo;){const yarnNode=this.yarnNodes[jumpTo];if(void 0===yarnNode)throw new Error(`Node "${startNode}" does not exist`);const parserNodes=Array.from(parser_parser.parse(yarnNode.body)),metadata={...yarnNode};delete metadata.body;const result=yield*this.evalNodes(parserNodes,metadata);jumpTo=result&&result.jump}}*evalNodes(nodes,metadata){let shortcutNodes=[],textRun="";const filteredNodes=nodes.filter(Boolean);for(let nodeIdx=0;nodeIdx<filteredNodes.length;nodeIdx+=1){const node=filteredNodes[nodeIdx],nextNode=filteredNodes[nodeIdx+1];if(node instanceof nodeTypes.Text||node instanceof nodeTypes.Expression)textRun+=this.evaluateExpressionOrLiteral(node).toString(),nextNode&&node.lineNum===nextNode.lineNum&&(nextNode instanceof nodeTypes.Text||nextNode instanceof nodeTypes.Expression)||(yield new results.TextResult(textRun,node.hashtags,metadata),textRun="");else if(node instanceof nodeTypes.Shortcut){if(shortcutNodes.push(node),!(nextNode instanceof nodeTypes.Shortcut)){const result=yield*this.handleShortcuts(shortcutNodes,metadata);if(result&&(result.stop||result.jump))return result;shortcutNodes=[]}}else if(node instanceof nodeTypes.Assignment)this.evaluateAssignment(node);else if(node instanceof nodeTypes.Conditional){const evalResult=this.evaluateConditional(node);if(evalResult){const result=yield*this.evalNodes(evalResult,metadata);if(result&&(result.stop||result.jump))return result}}else{if(node instanceof parser_nodes.JumpCommandNode)return{jump:node.destination};if(node instanceof parser_nodes.StopCommandNode)return{stop:!0};{const command=this.evaluateExpressionOrLiteral(node.command);yield new results.CommandResult(command,node.hashtags,metadata)}}}}*handleShortcuts(selections,metadata){const transformedSelections=selections.map((s=>{let isAvailable=!0;s.conditionalExpression&&!this.evaluateExpressionOrLiteral(s.conditionalExpression)&&(isAvailable=!1);const text=this.evaluateExpressionOrLiteral(s.text);return Object.assign(s,{isAvailable,text})})),optionsResult=new results.OptionsResult(transformedSelections,metadata);if(yield optionsResult,"number"!=typeof optionsResult.selected)throw new Error("No option selected before resuming dialogue");{const selectedOption=transformedSelections[optionsResult.selected];if(selectedOption.content)return yield*this.evalNodes(selectedOption.content,metadata)}}evaluateAssignment(node){const result=this.evaluateExpressionOrLiteral(node.expression),oldValue=this.variables.get(node.variableName);if(oldValue&&typeof oldValue!=typeof result)throw new Error(`Variable ${node.variableName} is already type ${typeof oldValue}; cannot set equal to ${result} of type ${typeof result}`);this.variables.set(node.variableName,result)}evaluateConditional(node){if("IfNode"===node.type){if(this.evaluateExpressionOrLiteral(node.expression))return node.statement}else{if("IfElseNode"!==node.type&&"ElseIfNode"!==node.type)return node.statement;if(this.evaluateExpressionOrLiteral(node.expression))return node.statement;if(node.elseStatement)return this.evaluateConditional(node.elseStatement)}return null}evaluateFunctionCall(node){if(this.functions[node.functionName])return this.functions[node.functionName](...node.args.map(this.evaluateExpressionOrLiteral,this));throw new Error(`Function "${node.functionName}" not found`)}evaluateExpressionOrLiteral(node){if(Array.isArray(node))return node.reduce(((acc,n)=>acc+this.evaluateExpressionOrLiteral(n).toString()),"");const handler={UnaryMinusExpressionNode:a=>-a,ArithmeticExpressionAddNode:(a,b)=>a+b,ArithmeticExpressionMinusNode:(a,b)=>a-b,ArithmeticExpressionExponentNode:(a,b)=>a**b,ArithmeticExpressionMultiplyNode:(a,b)=>a*b,ArithmeticExpressionDivideNode:(a,b)=>a/b,ArithmeticExpressionModuloNode:(a,b)=>a%b,NegatedBooleanExpressionNode:a=>!a,BooleanOrExpressionNode:(a,b)=>a||b,BooleanAndExpressionNode:(a,b)=>a&&b,BooleanXorExpressionNode:(a,b)=>!!(a^b),EqualToExpressionNode:(a,b)=>a===b,NotEqualToExpressionNode:(a,b)=>a!==b,GreaterThanExpressionNode:(a,b)=>a>b,GreaterThanOrEqualToExpressionNode:(a,b)=>a>=b,LessThanExpressionNode:(a,b)=>a<b,LessThanOrEqualToExpressionNode:(a,b)=>a<=b,TextNode:a=>a.text,EscapedCharacterNode:a=>this.noEscape?a.text:a.text.slice(1),NumericLiteralNode:a=>parseFloat(a.numericLiteral),StringLiteralNode:a=>`${a.stringLiteral}`,BooleanLiteralNode:a=>"true"===a.booleanLiteral,VariableNode:a=>this.variables.get(a.variableName),FunctionCallNode:a=>this.evaluateFunctionCall(a),InlineExpressionNode:a=>a}[node.type];if(!handler)throw new Error(`node type not recognized: ${node.type}`);return handler(node instanceof nodeTypes.Expression?this.evaluateExpressionOrLiteral(node.expression||node.expression1):node,node.expression2?this.evaluateExpressionOrLiteral(node.expression2):node)}},TextResult:results.TextResult,CommandResult:results.CommandResult,OptionsResult:results.OptionsResult};runner.OptionsResult=results.OptionsResult,runner.TextResult=results.TextResult,runner.CommandResult=results.CommandResult;const src=runner;function parseLine(node,locale){node.markup=[],function parseCharacterLabel(node){const match=node.text.match(/^(\S+):\s+/);match&&(node.text=node.text.replace(match[0],""),node.markup.push({name:"character",properties:{name:match[1]}}))}(node),function parseMarkup(node,locale){const attributes=[];let noMarkup=!1;const attributeRegex=/(^|[^\\])\[(.*?[^\\])\](.|$)/;let textRemaining=node.text,resultText="",match=textRemaining.match(attributeRegex);for(;match;){const{index}=match,[wholeMatch,charBefore,contents,charAfter]=match,hasLeadingSpace=/\s/.test(charBefore),hasTrailingSpace=/\s/.test(charAfter),attribute={...parseAttributeContents(contents,locale),position:resultText.length+index+charBefore.length};if(noMarkup&&"nomarkup"!==attribute.name)resultText+=textRemaining.slice(0,index+wholeMatch.length-1),textRemaining=textRemaining.slice(index+wholeMatch.length-1);else{const isReplacementTag="select"===attribute.name||"plural"===attribute.name||"ordinal"===attribute.name,shouldTrim=!isReplacementTag&&attribute.isSelfClosing&&attribute.properties&&!1!==attribute.properties.trimwhitespace&&(0===index&&hasTrailingSpace||hasLeadingSpace&&hasTrailingSpace);attribute.properties&&delete attribute.properties.trimwhitespace;const replacement=charBefore+(attribute.replacement||"")+(shouldTrim?charAfter.slice(1):charAfter);textRemaining=textRemaining.replace(attributeRegex,replacement),resultText+=textRemaining.slice(0,index+replacement.slice(1).length),textRemaining=textRemaining.slice(index+replacement.slice(1).length),isReplacementTag||"nomarkup"===attribute.name||attributes.push(attribute)}"nomarkup"===attribute.name&&(noMarkup=!attribute.isClosing),match=textRemaining.match(attributeRegex)}node.text=resultText+textRemaining;const escapedCharacterRegex=/\\(\[|\])/;match=node.text.match(escapedCharacterRegex),textRemaining=node.text,resultText="";for(;match;){const char=match[1];attributes.forEach((attr=>{attr.position>resultText.length+match.index&&(attr.position-=1)})),textRemaining=textRemaining.replace(escapedCharacterRegex,char),resultText+=textRemaining.slice(0,match.index+1),textRemaining=textRemaining.slice(match.index+1),match=textRemaining.match(escapedCharacterRegex)}node.text=resultText+textRemaining;const openTagStacks={};attributes.forEach((attr=>{if(openTagStacks[attr.name]||(openTagStacks[attr.name]=[]),attr.isClosing&&!openTagStacks[attr.name].length)throw new Error(`Encountered closing ${attr.name} tag before opening tag`);if(attr.isClosing){const openTag=openTagStacks[attr.name].pop();node.markup.push({name:openTag.name,position:openTag.position,properties:openTag.properties,length:attr.position-openTag.position})}else if(attr.isSelfClosing)node.markup.push({name:attr.name,position:attr.position,properties:attr.properties,length:0});else if(attr.isCloseAll){const openTags=Object.values(openTagStacks).flat();for(;openTags.length;){const openTag=openTags.pop();node.markup.push({name:openTag.name,position:openTag.position,properties:openTag.properties,length:attr.position-openTag.position})}}else openTagStacks[attr.name].push({name:attr.name,position:attr.position,properties:attr.properties})}))}(node,locale),node.text=node.text.replace(/(?:\\(.))/g,"$1")}function parseAttributeContents(contents,locale){const nameMatch=contents.match(/^\/?([^\s=/]+)(\/|\s|$)/),isClosing="/"===contents[0],isSelfClosing="/"===contents[contents.length-1];if("/"===contents)return{name:"closeall",isCloseAll:!0};if(isClosing)return{name:nameMatch[1],isClosing:!0};{const propertyAssignments=(nameMatch?contents.replace(nameMatch[0],""):contents).match(/(\S+?".*?"|[^\s/]+)/g);let properties={};propertyAssignments&&(properties=propertyAssignments.reduce(((acc,propAss)=>({...acc,...parsePropertyAssignment(propAss)})),{}));const name=nameMatch&&nameMatch[1]||Object.keys(properties)[0];let replacement;return"select"===name?replacement=function processSelectAttribute(properties){return properties[properties.value]}(properties):"plural"===name?replacement=function processPluralAttribute(properties,locale){return properties[new Intl.PluralRules(locale).select(properties.value)].replace(/%/g,properties.value)}(properties,locale):"ordinal"===name&&(replacement=function processOrdinalAttribute(properties,locale){return properties[new Intl.PluralRules(locale,{type:"ordinal"}).select(properties.value)].replace(/%/g,properties.value)}(properties,locale)),{name,properties,isSelfClosing,replacement}}}function parsePropertyAssignment(propAss){const[propName,...rest]=propAss.split("="),stringValue=rest.join("=");if(!propName||!stringValue)throw new Error(`Invalid markup property assignment: ${propAss}`);let value;return value="true"===stringValue||"false"===stringValue?"true"===stringValue:/^-?\d*\.?\d+$/.test(stringValue)?+stringValue:'"'===stringValue[0]&&'"'===stringValue[stringValue.length-1]?stringValue.slice(1,-1):stringValue,{[propName]:value}}class YarnBound{constructor({dialogue,variableStorage,functions,handleCommand,combineTextAndOptionsResults,locale,startAt="Start"}){this.handleCommand=handleCommand,this.combineTextAndOptionsResults=combineTextAndOptionsResults,this.bondage=src,this.bufferedNode=null,this.currentResult=null,this.history=[],this.locale=locale,this.runner=new src.Runner,this.runner.noEscape=!0,this.runner.load(dialogue),variableStorage&&(variableStorage.display=variableStorage.display||variableStorage.get,this.runner.setVariableStorage(variableStorage)),functions&&Object.entries(functions).forEach((entry=>{this.registerFunction(...entry)})),this.jump(startAt)}jump(startAt){this.generator=this.runner.run(startAt),this.bufferedNode=null,this.advance()}advance(optionIndex){void 0!==optionIndex&&this.currentResult&&this.currentResult.select&&this.currentResult.select(optionIndex);let next=this.bufferedNode||this.generator.next().value,buffered=null;if(this.handleCommand)for(;next instanceof src.CommandResult;)this.handleCommand(next),next=this.generator.next().value;if(!(next instanceof src.OptionsResult)){const upcoming=this.generator.next();buffered=upcoming.value,next instanceof src.TextResult&&this.combineTextAndOptionsResults&&buffered instanceof src.OptionsResult?(next=Object.assign(buffered,next),buffered=null):next&&upcoming.done&&(next=Object.assign(next,{isDialogueEnd:!0}))}this.currentResult&&this.history.push(this.currentResult),next instanceof src.TextResult?parseLine(next,this.locale):next instanceof src.OptionsResult&&(next.text&&parseLine(next,this.locale),next.options.forEach((option=>{parseLine(option,this.locale)}))),this.currentResult=next,this.bufferedNode=buffered}registerFunction(name,func){this.runner.registerFunction(name,func)}}const{OptionsResult:src_OptionsResult,TextResult:src_TextResult,CommandResult:src_CommandResult}=src;YarnBound.OptionsResult=src_OptionsResult,YarnBound.TextResult=src_TextResult,YarnBound.CommandResult=src_CommandResult;const yarn_bound_src=YarnBound}}]);
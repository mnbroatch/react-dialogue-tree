!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react"),require("prop-types")):"function"==typeof define&&define.amd?define(["exports","react","prop-types"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ReactDialogueTree={},e.React,e.PropTypes)}(this,(function(e,t,n){"use strict";function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=s(t),a=s(n);function o({children:e,scrollSpeed:n=8}){const s=t.useRef();return t.useEffect((()=>{if(!s.current||!s.current.lastChild)return;const e=s.current.scrollHeight-Math.max(s.current.lastChild.offsetHeight,s.current.offsetHeight),t=()=>{s.current.scrollTop+=n,s.current.scrollTop<e&&requestAnimationFrame(t)};requestAnimationFrame(t)}),[e,n]),i.default.createElement("div",{className:"chat-scroller"},i.default.createElement("div",{className:"chat-scroller__inner",ref:s,style:{height:"100%",overflowY:"auto"}},e))}function r({currentResult:e,history:t,advance:n,defaultOption:s,finalOption:a,customNode:r}){const l=e?[...t,e]:t,d=r||je;return i.default.createElement("div",{className:"dialogue-tree"},i.default.createElement(o,{scrollSpeed:8},l.map(((e,o)=>e&&i.default.createElement("div",{className:"dialogue-tree__node-spacer",key:o},i.default.createElement("div",{className:"dialogue-tree__node-wrapper"},i.default.createElement(d,{node:e,advance:n,defaultOption:s,finalOption:a,isHistory:t.includes(e)})))))))}o.propTypes={children:a.default.node,scrollSpeed:a.default.number};const l=a.default.shape({text:a.default.string,options:a.default.arrayOf(a.default.shape({text:a.default.string,isAvailable:a.default.bool})),selected:a.default.number,isDialogueEnd:a.default.bool});function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t,n){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}r.propTypes={currentResult:l,history:a.default.arrayOf(l),advance:a.default.func,defaultOption:a.default.string,finalOption:a.default.string,customNode:a.default.elementType};class h{}class p{}class f{}class m{}class x{}class T{}class E{}class g{}var y={types:{Text:h,Shortcut:p,Conditional:f,Assignment:m,Literal:x,Expression:T,FunctionCall:E,Command:g},DialogShortcutNode:class extends p{constructor(e,t,n,s=[],i){super(),this.type="DialogShortcutNode",this.text=e,this.content=t,this.lineNum=n.first_line,this.hashtags=s,this.conditionalExpression=i}},IfNode:class extends f{constructor(e,t){super(),this.type="IfNode",this.expression=e,this.statement=t}},IfElseNode:class extends f{constructor(e,t,n){super(),this.type="IfElseNode",this.expression=e,this.statement=t,this.elseStatement=n}},ElseNode:class extends f{constructor(e){super(),this.type="ElseNode",this.statement=e}},ElseIfNode:class extends f{constructor(e,t,n){super(),this.type="ElseIfNode",this.expression=e,this.statement=t,this.elseStatement=n}},GenericCommandNode:class extends g{constructor(e,t,n=[]){super(),this.type="GenericCommandNode",this.command=e,this.hashtags=n,this.lineNum=t.first_line}},JumpCommandNode:class extends g{constructor(e){super(),this.type="JumpCommandNode",this.destination=e}},StopCommandNode:class extends g{constructor(){super(),this.type="StopCommandNode"}},TextNode:class extends h{constructor(e,t,n=[]){super(),this.type="TextNode",this.text=e,this.lineNum=t.first_line,this.hashtags=n}},EscapedCharacterNode:class extends h{constructor(e,t,n=[]){super(),this.type="EscapedCharacterNode",this.text=e,this.lineNum=t.first_line,this.hashtags=n}},NumericLiteralNode:class extends x{constructor(e){super(),this.type="NumericLiteralNode",this.numericLiteral=e}},StringLiteralNode:class extends x{constructor(e){super(),this.type="StringLiteralNode",this.stringLiteral=e}},BooleanLiteralNode:class extends x{constructor(e){super(),this.type="BooleanLiteralNode",this.booleanLiteral=e}},VariableNode:class extends x{constructor(e){super(),this.type="VariableNode",this.variableName=e}},UnaryMinusExpressionNode:class extends T{constructor(e){super(),this.type="UnaryMinusExpressionNode",this.expression=e}},ArithmeticExpressionAddNode:class extends T{constructor(e,t){super(),this.type="ArithmeticExpressionAddNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionMinusNode:class extends T{constructor(e,t){super(),this.type="ArithmeticExpressionMinusNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionMultiplyNode:class extends T{constructor(e,t){super(),this.type="ArithmeticExpressionMultiplyNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionExponentNode:class extends T{constructor(e,t){super(),this.type="ArithmeticExpressionExponentNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionDivideNode:class extends T{constructor(e,t){super(),this.type="ArithmeticExpressionDivideNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionModuloNode:class extends T{constructor(e,t){super(),this.type="ArithmeticExpressionModuloNode",this.expression1=e,this.expression2=t}},NegatedBooleanExpressionNode:class extends T{constructor(e){super(),this.type="NegatedBooleanExpressionNode",this.expression=e}},BooleanOrExpressionNode:class extends T{constructor(e,t){super(),this.type="BooleanOrExpressionNode",this.expression1=e,this.expression2=t}},BooleanAndExpressionNode:class extends T{constructor(e,t){super(),this.type="BooleanAndExpressionNode",this.expression1=e,this.expression2=t}},BooleanXorExpressionNode:class extends T{constructor(e,t){super(),this.type="BooleanXorExpressionNode",this.expression1=e,this.expression2=t}},EqualToExpressionNode:class extends T{constructor(e,t){super(),this.type="EqualToExpressionNode",this.expression1=e,this.expression2=t}},NotEqualToExpressionNode:class extends T{constructor(e,t){super(),this.type="NotEqualToExpressionNode",this.expression1=e,this.expression2=t}},GreaterThanExpressionNode:class extends T{constructor(e,t){super(),this.type="GreaterThanExpressionNode",this.expression1=e,this.expression2=t}},GreaterThanOrEqualToExpressionNode:class extends T{constructor(e,t){super(),this.type="GreaterThanOrEqualToExpressionNode",this.expression1=e,this.expression2=t}},LessThanExpressionNode:class extends T{constructor(e,t){super(),this.type="LessThanExpressionNode",this.expression1=e,this.expression2=t}},LessThanOrEqualToExpressionNode:class extends T{constructor(e,t){super(),this.type="LessThanOrEqualToExpressionNode",this.expression1=e,this.expression2=t}},SetVariableEqualToNode:class extends m{constructor(e,t){super(),this.type="SetVariableEqualToNode",this.variableName=e,this.expression=t}},FunctionCallNode:class extends E{constructor(e,t,n,s=[]){super(),this.type="FunctionCallNode",this.functionName=e,this.args=t,this.lineNum=n.first_line,this.hashtags=s}},InlineExpressionNode:class extends T{constructor(e,t,n=[]){super(),this.type="InlineExpressionNode",this.expression=e,this.lineNum=t.first_line,this.hashtags=n}}};const N={Whitespace:null,Indent:null,Dedent:null,EndOfLine:/\n/,EndOfInput:null,Number:/-?[0-9]+(\.[0-9+])?/,String:/"([^"\\]*(?:\\.[^"\\]*)*)"/,BeginCommand:/<</,EndCommand:/>>/,Variable:/\$([A-Za-z0-9_.])+/,ShortcutOption:/->/,Hashtag:/#([^(\s|#|//)]+)/,Comment:/\/\/.*/,OptionStart:/\[\[/,OptionDelimit:/\|/,OptionEnd:/\]\]/,If:/if(?!\w)/,ElseIf:/elseif(?!\w)/,Else:/else(?!\w)/,EndIf:/endif(?!\w)/,Jump:/jump(?!\w)/,Stop:/stop(?!\w)/,Set:/set(?!\w)/,Declare:/declare(?!\w)/,As:/as(?!\w)/,ExplicitType:/(String|Number|Bool)(?=>>)/,True:/true(?!\w)/,False:/false(?!\w)/,Null:/null(?!\w)/,LeftParen:/\(/,RightParen:/\)/,Comma:/,/,UnaryMinus:/-(?!\s)/,EqualTo:/(==|is(?!\w)|eq(?!\w))/,GreaterThan:/(>|gt(?!\w))/,GreaterThanOrEqualTo:/(>=|gte(?!\w))/,LessThan:/(<|lt(?!\w))/,LessThanOrEqualTo:/(<=|lte(?!\w))/,NotEqualTo:/(!=|neq(?!\w))/,Or:/(\|\||or(?!\w))/,And:/(&&|and(?!\w))/,Xor:/(\^|xor(?!\w))/,Not:/(!|not(?!\w))/,EqualToOrAssign:/(=|to(?!\w))/,Add:/\+/,Minus:/-/,Exponent:/\*\*/,Multiply:/\*/,Divide:/\//,Modulo:/%/,AddAssign:/\+=/,MinusAssign:/-=/,MultiplyAssign:/\*=/,DivideAssign:/\/=/,Identifier:/[a-zA-Z0-9_:.]+/,EscapedCharacter:/\\./,Text:/[^\\]/,BeginInlineExp:/{/,EndInlineExp:/}/};class b{constructor(){this.transitions=[],this.textRule=null,this.isTrackingNextIndentation=!1}addTransition(e,t,n){return this.transitions.push({token:e,regex:N[e],state:t||null,delimitsText:n||!1}),this}addTextRule(e,t){if(this.textRule)throw new Error("Cannot add more than one text rule to a state.");const n=[];this.transitions.forEach((e=>{e.delimitsText&&n.push(`(${e.regex.source})`)}));const s=`((?!${n.join("|")}).)+`;return this.addTransition(e,t),this.textRule=this.transitions[this.transitions.length-1],this.textRule.regex=new RegExp(s),this}setTrackNextIndentation(e){return this.isTrackingNextIndentation=e,this}}var O={makeStates:function(){return{base:(new b).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","command",!0).addTransition("BeginInlineExp","inlineExpression",!0).addTransition("ShortcutOption","shortcutOption").addTextRule("Text"),shortcutOption:(new b).setTrackNextIndentation(!0).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","expression",!0).addTransition("BeginInlineExp","inlineExpressionInShortcut",!0).addTextRule("Text","base"),command:(new b).addTransition("If","expression").addTransition("Else").addTransition("ElseIf","expression").addTransition("EndIf").addTransition("Set","assignment").addTransition("Declare","declare").addTransition("Jump","jump").addTransition("Stop","stop").addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0).addTextRule("Text"),commandArg:(new b).addTextRule("Text"),commandParenArgOrExpression:(new b).addTransition("EndCommand","base",!0).addTransition("LeftParen","expression").addTransition("Variable","expression").addTransition("Number","expression").addTransition("String").addTransition("True").addTransition("False").addTransition("Null").addTransition("RightParen"),assignment:(new b).addTransition("Variable").addTransition("EqualToOrAssign","expression"),declare:(new b).addTransition("Variable").addTransition("EndCommand","base").addTransition("EqualToOrAssign","expression"),jump:(new b).addTransition("Identifier").addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0),stop:(new b).addTransition("EndCommand","base",!0),expression:(new b).addTransition("As").addTransition("ExplicitType").addTransition("EndCommand","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule(),inlineExpression:(new b).addTransition("EndInlineExp","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInCommand:(new b).addTransition("EndInlineExp","command").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInShortcut:(new b).addTransition("EndInlineExp","shortcutOption").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base")}}};var w=function(e,t,n,s){for(n=n||{},s=e.length;s--;n[e[s]]=t);return n},v=[1,16],C=[1,17],A=[1,12],$=[1,19],k=[1,18],L=[5,18,19,23,34,36,77],I=[1,23],R=[1,24],S=[1,26],_=[1,27],q=[5,14,16,18,19,21,23,34,36,77],D=[1,30],M=[1,34],j=[1,35],B=[1,36],P=[1,37],G=[5,14,16,18,19,21,23,26,34,36,77],F=[1,50],V=[1,49],H=[1,44],U=[1,45],X=[1,46],J=[1,51],z=[1,52],Z=[1,53],W=[1,54],Y=[1,55],K=[5,16,18,19,23,34,36,77],Q=[1,71],ee=[1,72],te=[1,73],ne=[1,74],se=[1,75],ie=[1,76],ae=[1,77],oe=[1,78],re=[1,79],le=[1,80],de=[1,81],ue=[1,82],ce=[1,83],he=[1,84],pe=[1,85],fe=[26,46,51,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,70,78],me=[26,46,51,53,54,55,56,57,60,61,62,63,64,65,66,67,68,70,78],xe=[26,46,51,70,78],Te=[1,122],Ee=[1,123],ge=[26,46,51,53,54,60,61,62,63,64,65,66,67,68,70,78],ye=[26,46,51,60,61,62,63,64,65,66,67,68,70,78],Ne=[51,70],be=[16,18,19,23,34,77],Oe={trace:function(){},yy:{},symbols_:{error:2,node:3,statements:4,EndOfInput:5,conditionalBlock:6,statement:7,text:8,shortcut:9,genericCommand:10,assignmentCommand:11,jumpCommand:12,stopCommand:13,Comment:14,hashtags:15,EndOfLine:16,textNode:17,Text:18,EscapedCharacter:19,inlineExpression:20,Hashtag:21,conditional:22,BeginCommand:23,If:24,expression:25,EndCommand:26,EndIf:27,additionalConditionalBlocks:28,else:29,Else:30,elseif:31,ElseIf:32,shortcutOption:33,ShortcutOption:34,Indent:35,Dedent:36,Jump:37,Identifier:38,Stop:39,setCommandInner:40,declareCommandInner:41,Set:42,Variable:43,EqualToOrAssign:44,Declare:45,As:46,ExplicitType:47,functionArgument:48,functionCall:49,LeftParen:50,RightParen:51,UnaryMinus:52,Add:53,Minus:54,Exponent:55,Multiply:56,Divide:57,Modulo:58,Not:59,Or:60,And:61,Xor:62,EqualTo:63,NotEqualTo:64,GreaterThan:65,GreaterThanOrEqualTo:66,LessThan:67,LessThanOrEqualTo:68,parenExpressionArgs:69,Comma:70,literal:71,True:72,False:73,Number:74,String:75,Null:76,BeginInlineExp:77,EndInlineExp:78,$accept:0,$end:1},terminals_:{2:"error",5:"EndOfInput",14:"Comment",16:"EndOfLine",18:"Text",19:"EscapedCharacter",21:"Hashtag",23:"BeginCommand",24:"If",26:"EndCommand",27:"EndIf",30:"Else",32:"ElseIf",34:"ShortcutOption",35:"Indent",36:"Dedent",37:"Jump",38:"Identifier",39:"Stop",42:"Set",43:"Variable",44:"EqualToOrAssign",45:"Declare",46:"As",47:"ExplicitType",50:"LeftParen",51:"RightParen",52:"UnaryMinus",53:"Add",54:"Minus",55:"Exponent",56:"Multiply",57:"Divide",58:"Modulo",59:"Not",60:"Or",61:"And",62:"Xor",63:"EqualTo",64:"NotEqualTo",65:"GreaterThan",66:"GreaterThanOrEqualTo",67:"LessThan",68:"LessThanOrEqualTo",70:"Comma",72:"True",73:"False",74:"Number",75:"String",76:"Null",77:"BeginInlineExp",78:"EndInlineExp"},productions_:[0,[3,2],[4,1],[4,2],[4,1],[4,2],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,2],[7,2],[7,2],[17,1],[17,1],[8,1],[8,1],[8,2],[15,1],[15,2],[22,4],[6,6],[6,4],[6,2],[29,3],[29,2],[31,4],[31,2],[28,5],[28,5],[28,3],[33,2],[33,3],[33,2],[33,2],[33,3],[33,2],[9,1],[9,5],[10,3],[12,4],[12,4],[13,3],[11,3],[11,3],[40,4],[41,4],[41,6],[25,1],[25,1],[25,3],[25,2],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,2],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[49,3],[49,4],[69,3],[69,1],[48,1],[48,1],[48,1],[71,1],[71,1],[71,1],[71,1],[71,1],[20,3]],performAction:function(e,t,n,s,i,a,o){var r=a.length-1;switch(i){case 1:return a[r-1].flat();case 2:case 4:case 7:case 8:case 9:case 10:case 11:case 17:case 18:case 73:this.$=[a[r]];break;case 3:case 19:this.$=a[r-1].concat(a[r]);break;case 5:this.$=a[r-1].concat([a[r]]);break;case 6:case 51:case 50:case 74:case 75:this.$=a[r];break;case 12:case 14:case 25:case 28:case 29:case 45:case 52:case 22:case 36:case 38:this.$=a[r-1];break;case 13:this.$=a[r-1].map((e=>Object.assign(e,{hashtags:a[r]})));break;case 15:this.$=new s.TextNode(a[r],this._$);break;case 16:this.$=new s.EscapedCharacterNode(a[r],this._$);break;case 20:this.$=[a[r].substring(1)];break;case 21:this.$=[a[r-1].substring(1)].concat(a[r]);break;case 23:this.$=new s.IfNode(a[r-5],a[r-3].flat());break;case 24:this.$=new s.IfElseNode(a[r-3],a[r-1].flat(),a[r]);break;case 26:case 27:this.$=void 0;break;case 30:this.$=new s.ElseNode(a[r-3].flat());break;case 31:this.$=new s.ElseIfNode(a[r-4],a[r-3].flat());break;case 32:this.$=new s.ElseIfNode(a[r-2],a[r-1].flat(),a[r]);break;case 33:this.$={text:a[r]};break;case 34:this.$={text:a[r-1],conditional:a[r]};break;case 35:this.$=u(u({},a[r-1]),{},{hashtags:a[r]});break;case 37:this.$=u(u({},a[r-2]),{},{hashtags:a[r-1]});break;case 39:this.$=new s.DialogShortcutNode(a[r].text,void 0,this._$,a[r].hashtags,a[r].conditional);break;case 40:this.$=new s.DialogShortcutNode(a[r-4].text,a[r-1].flat(),this._$,a[r-4].hashtags,a[r-4].conditional);break;case 41:this.$=new s.GenericCommandNode(a[r-1],this._$);break;case 42:case 43:this.$=new s.JumpCommandNode(a[r-1]);break;case 44:this.$=new s.StopCommandNode;break;case 46:this.$=null;break;case 47:this.$=new s.SetVariableEqualToNode(a[r-2].substring(1),a[r]);break;case 48:this.$=null,s.registerDeclaration(a[r-2].substring(1),a[r]);break;case 49:this.$=null,s.registerDeclaration(a[r-4].substring(1),a[r-2],a[r]);break;case 53:this.$=new s.UnaryMinusExpressionNode(a[r]);break;case 54:this.$=new s.ArithmeticExpressionAddNode(a[r-2],a[r]);break;case 55:this.$=new s.ArithmeticExpressionMinusNode(a[r-2],a[r]);break;case 56:this.$=new s.ArithmeticExpressionExponentNode(a[r-2],a[r]);break;case 57:this.$=new s.ArithmeticExpressionMultiplyNode(a[r-2],a[r]);break;case 58:this.$=new s.ArithmeticExpressionDivideNode(a[r-2],a[r]);break;case 59:this.$=new s.ArithmeticExpressionModuloNode(a[r-2],a[r]);break;case 60:this.$=new s.NegatedBooleanExpressionNode(a[r]);break;case 61:this.$=new s.BooleanOrExpressionNode(a[r-2],a[r]);break;case 62:this.$=new s.BooleanAndExpressionNode(a[r-2],a[r]);break;case 63:this.$=new s.BooleanXorExpressionNode(a[r-2],a[r]);break;case 64:this.$=new s.EqualToExpressionNode(a[r-2],a[r]);break;case 65:this.$=new s.NotEqualToExpressionNode(a[r-2],a[r]);break;case 66:this.$=new s.GreaterThanExpressionNode(a[r-2],a[r]);break;case 67:this.$=new s.GreaterThanOrEqualToExpressionNode(a[r-2],a[r]);break;case 68:this.$=new s.LessThanExpressionNode(a[r-2],a[r]);break;case 69:this.$=new s.LessThanOrEqualToExpressionNode(a[r-2],a[r]);break;case 70:this.$=new s.FunctionCallNode(a[r-2],[],this._$);break;case 71:this.$=new s.FunctionCallNode(a[r-3],a[r-1],this._$);break;case 72:this.$=a[r-2].concat([a[r]]);break;case 76:this.$=new s.VariableNode(a[r].substring(1));break;case 77:case 78:this.$=new s.BooleanLiteralNode(a[r]);break;case 79:this.$=new s.NumericLiteralNode(a[r]);break;case 80:this.$=new s.StringLiteralNode(a[r]);break;case 81:this.$=new s.NullLiteralNode(a[r]);break;case 82:this.$=new s.InlineExpressionNode(a[r-1],this._$)}},table:[{3:1,4:2,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:v,19:C,20:14,22:5,23:A,33:15,34:$,77:k},{1:[3]},{5:[1,20],6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:v,19:C,20:14,22:5,23:A,33:15,34:$,77:k},w(L,[2,2],{16:I}),w(L,[2,4],{15:25,14:R,16:S,21:_}),{16:[1,28]},w([5,14,16,21,23,34,36],[2,6],{17:13,20:14,8:29,18:v,19:C,77:k}),w(q,[2,7]),w(q,[2,8]),w(q,[2,9]),w(q,[2,10]),w(q,[2,11]),{8:31,17:13,18:v,19:C,20:14,24:D,37:M,39:j,40:32,41:33,42:B,45:P,77:k},w(G,[2,17]),w(G,[2,18]),w(L,[2,39],{15:39,14:[1,40],16:[1,38],21:_}),w(G,[2,15]),w(G,[2,16]),{20:47,25:41,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{8:56,17:13,18:v,19:C,20:14,77:k},{1:[2,1]},w(L,[2,3],{16:I}),w(L,[2,5],{15:25,14:R,16:S,21:_}),w(K,[2,25]),w(q,[2,12]),w(q,[2,13]),w(q,[2,14]),w([5,14,16,18,19,23,34,36,77],[2,20],{15:57,21:_}),{4:58,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:v,19:C,20:14,22:5,23:A,33:15,34:$,77:k},w([5,14,16,21,23,26,34,36],[2,19],{17:13,20:14,8:29,18:v,19:C,77:k}),{20:47,25:59,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{8:29,17:13,18:v,19:C,20:14,26:[1,60],77:k},{26:[1,61]},{26:[1,62]},{20:64,38:[1,63],77:k},{26:[1,65]},{43:[1,66]},{43:[1,67]},w(q,[2,38],{35:[1,68]}),w([5,16,18,19,21,23,34,36,77],[2,35],{14:[1,69]}),w(q,[2,36]),{53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe,78:[1,70]},w(fe,[2,50]),w(fe,[2,51]),{20:47,25:86,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:87,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:88,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},w(fe,[2,74]),w(fe,[2,75]),w(fe,[2,76]),{50:[1,89]},w(fe,[2,77]),w(fe,[2,78]),w(fe,[2,79]),w(fe,[2,80]),w(fe,[2,81]),w([5,14,16,21,34,36],[2,33],{17:13,20:14,8:29,22:90,18:v,19:C,23:[1,91],77:k}),w(q,[2,21]),{6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:v,19:C,20:14,22:5,23:[1,92],28:93,29:94,31:95,33:15,34:$,77:k},{26:[1,96],53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe},w(q,[2,41]),w(q,[2,45]),w(q,[2,46]),{26:[1,97]},{26:[1,98]},w(q,[2,44]),{44:[1,99]},{44:[1,100]},{4:101,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:v,19:C,20:14,22:5,23:A,33:15,34:$,77:k},w(q,[2,37]),w([5,14,16,18,19,21,23,26,34,36,46,51,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,70,77,78],[2,82]),{20:47,25:102,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:103,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:104,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:105,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:106,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:107,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:108,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:109,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:110,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:111,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:112,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:113,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:114,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:115,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:116,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{51:[1,117],53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe},w(me,[2,53],{58:ie}),w(xe,[2,60],{53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe}),{20:47,25:120,38:F,43:V,48:42,49:43,50:H,51:[1,118],52:U,59:X,69:119,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},w(q,[2,34]),{24:D},{8:31,17:13,18:v,19:C,20:14,24:D,27:[1,121],30:Te,32:Ee,37:M,39:j,40:32,41:33,42:B,45:P,77:k},w(K,[2,24]),{4:124,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,125],17:13,18:v,19:C,20:14,22:5,23:A,33:15,34:$,77:k},{4:126,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,127],17:13,18:v,19:C,20:14,22:5,23:A,33:15,34:$,77:k},w(q,[2,22]),w(q,[2,42]),w(q,[2,43]),{20:47,25:128,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{20:47,25:129,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:v,19:C,20:14,22:5,23:A,33:15,34:$,36:[1,130],77:k},w(ge,[2,54],{55:te,56:ne,57:se,58:ie}),w(ge,[2,55],{55:te,56:ne,57:se,58:ie}),w(me,[2,56],{58:ie}),w(me,[2,57],{58:ie}),w(me,[2,58],{58:ie}),w(xe,[2,59],{53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe}),w([26,46,51,60,70,78],[2,61],{53:Q,54:ee,55:te,56:ne,57:se,58:ie,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe}),w([26,46,51,60,61,70,78],[2,62],{53:Q,54:ee,55:te,56:ne,57:se,58:ie,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe}),w([26,46,51,60,61,62,70,78],[2,63],{53:Q,54:ee,55:te,56:ne,57:se,58:ie,63:le,64:de,65:ue,66:ce,67:he,68:pe}),w(ye,[2,64],{53:Q,54:ee,55:te,56:ne,57:se,58:ie}),w(ye,[2,65],{53:Q,54:ee,55:te,56:ne,57:se,58:ie}),w(ye,[2,66],{53:Q,54:ee,55:te,56:ne,57:se,58:ie}),w(ye,[2,67],{53:Q,54:ee,55:te,56:ne,57:se,58:ie}),w(ye,[2,68],{53:Q,54:ee,55:te,56:ne,57:se,58:ie}),w(ye,[2,69],{53:Q,54:ee,55:te,56:ne,57:se,58:ie}),w(fe,[2,52]),w(fe,[2,70]),{51:[1,131],70:[1,132]},w(Ne,[2,73],{53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe}),{26:[1,133]},{26:[1,134]},{20:47,25:135,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},{6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:v,19:C,20:14,22:5,23:[1,136],33:15,34:$,77:k},w(be,[2,27]),{6:21,7:22,8:6,9:7,10:8,11:9,12:10,13:11,17:13,18:v,19:C,20:14,22:5,23:[1,137],28:138,29:94,31:95,33:15,34:$,77:k},w(be,[2,29]),{26:[2,47],53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe},{26:[2,48],46:[1,139],53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe},w(q,[2,40]),w(fe,[2,71]),{20:47,25:140,38:F,43:V,48:42,49:43,50:H,52:U,59:X,71:48,72:J,73:z,74:Z,75:W,76:Y,77:k},w(K,[2,23]),w(be,[2,26]),{26:[1,141],53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe},{8:31,17:13,18:v,19:C,20:14,24:D,27:[1,142],37:M,39:j,40:32,41:33,42:B,45:P,77:k},{8:31,17:13,18:v,19:C,20:14,24:D,27:[1,143],30:Te,32:Ee,37:M,39:j,40:32,41:33,42:B,45:P,77:k},w(K,[2,32]),{47:[1,144]},w(Ne,[2,72],{53:Q,54:ee,55:te,56:ne,57:se,58:ie,60:ae,61:oe,62:re,63:le,64:de,65:ue,66:ce,67:he,68:pe}),w(be,[2,28]),{26:[1,145]},{26:[1,146]},{26:[2,49]},w(K,[2,30]),w(K,[2,31])],defaultActions:{20:[2,1],144:[2,49]},parseError:function(e,t){if(!t.recoverable){var n=new Error(e);throw n.hash=t,n}this.trace(e)},parse:function(e){var t=this,n=[0],s=[null],i=[],a=this.table,o="",r=0,l=0,d=2,u=1,c=i.slice.call(arguments,1),h=Object.create(this.lexer),p={yy:{}};for(var f in this.yy)Object.prototype.hasOwnProperty.call(this.yy,f)&&(p.yy[f]=this.yy[f]);h.setInput(e,p.yy),p.yy.lexer=h,p.yy.parser=this,void 0===h.yylloc&&(h.yylloc={});var m=h.yylloc;i.push(m);var x=h.options&&h.options.ranges;"function"==typeof p.yy.parseError?this.parseError=p.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var T,E,g,y,N,b,O,w,v=function(){var e;return"number"!=typeof(e=h.lex()||u)&&(e=t.symbols_[e]||e),e},C={};;){if(E=n[n.length-1],this.defaultActions[E]?g=this.defaultActions[E]:(null==T&&(T=v()),g=a[E]&&a[E][T]),void 0===g||!g.length||!g[0]){var A="";for(N in w=[],a[E])this.terminals_[N]&&N>d&&w.push("'"+this.terminals_[N]+"'");A=h.showPosition?"Parse error on line "+(r+1)+":\n"+h.showPosition()+"\nExpecting "+w.join(", ")+", got '"+(this.terminals_[T]||T)+"'":"Parse error on line "+(r+1)+": Unexpected "+(T==u?"end of input":"'"+(this.terminals_[T]||T)+"'"),this.parseError(A,{text:h.match,token:this.terminals_[T]||T,line:h.yylineno,loc:m,expected:w})}if(g[0]instanceof Array&&g.length>1)throw new Error("Parse Error: multiple actions possible at state: "+E+", token: "+T);switch(g[0]){case 1:n.push(T),s.push(h.yytext),i.push(h.yylloc),n.push(g[1]),T=null,l=h.yyleng,o=h.yytext,r=h.yylineno,m=h.yylloc;break;case 2:if(b=this.productions_[g[1]][1],C.$=s[s.length-b],C._$={first_line:i[i.length-(b||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(b||1)].first_column,last_column:i[i.length-1].last_column},x&&(C._$.range=[i[i.length-(b||1)].range[0],i[i.length-1].range[1]]),void 0!==(y=this.performAction.apply(C,[o,l,r,p.yy,g[1],s,i].concat(c))))return y;b&&(n=n.slice(0,-1*b*2),s=s.slice(0,-1*b),i=i.slice(0,-1*b)),n.push(this.productions_[g[1]][0]),s.push(C.$),i.push(C._$),O=a[n[n.length-2]][n[n.length-1]],n.push(O);break;case 3:return!0}}return!0}};function we(){this.yy={}}we.prototype=Oe,Oe.Parser=we,Oe.lexer=new class{constructor(){this.states=O.makeStates(),this.state="base",this.originalText="",this.lines=[],this.indentation=[[0,!1]],this.shouldTrackNextIndentation=!1,this.previousLevelOfIndentation=0,this.reset()}reset(){this.yytext="",this.yylloc={first_column:1,first_line:1,last_column:1,last_line:1},this.yylineno=1}lex(){if(this.isAtTheEndOfText()){this.yytext="";const e=this.indentation.pop();return e&&e[1]?"Dedent":"EndOfInput"}return this.isAtTheEndOfLine()?(this.advanceLine(),"EndOfLine"):this.lexNextTokenOnCurrentLine()}advanceLine(){this.yylineno+=1;const e=this.getCurrentLine().replace(/\t/,"    ");this.lines[this.yylineno-1]=e,this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],this.yytext="",this.yylloc={first_column:1,first_line:this.yylineno,last_column:1,last_line:this.yylineno}}lexNextTokenOnCurrentLine(){const e=this.getCurrentLineIndentation();if(this.shouldTrackNextIndentation&&e>this.previousLevelOfIndentation)return this.indentation.push([e,!0]),this.shouldTrackNextIndentation=!1,this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=e,this.yytext="","Indent";if(e<this.getLastRecordedIndentation()[0]){if(this.indentation.pop()[1])return this.yytext="",this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],"Dedent";this.lexNextTokenOnCurrentLine()}e===this.previousLevelOfIndentation&&1===this.yylloc.last_column&&(this.yylloc.last_column+=e);const t=this.getState().transitions;for(let n=0,s=t.length;n<s;n+=1){const s=t[n],i=this.getCurrentLine().substring(this.yylloc.last_column-1).match(s.regex);if(null!==i&&0===i.index){const t=i[0];this.yytext=this.getCurrentLine().substr(this.yylloc.last_column-1,t.length),"String"===s.token&&(this.yytext=this.yytext.substring(1,this.yytext.length-1)),this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=t.length,s.state&&(this.setState(s.state),this.shouldTrackNextIndentation&&this.getLastRecordedIndentation()[0]<e&&this.indentation.push([e,!1]));const n=this.states[s.state],a=!s.state||n.transitions.find((e=>"Text"===e.token));if("EndInlineExp"!==s.token&&"EscapedCharacter"!==s.token||!a){const e=this.getCurrentLine().substring(this.yylloc.last_column-1).match(/^\s*/);e[0]&&(this.yylloc.last_column+=e[0].length)}return s.token}}throw new Error(`Invalid syntax in: ${this.getCurrentLine()}`)}setState(e){if(void 0===this.states[e])throw new Error(`Cannot set the unknown state [${e}]`);this.state=e,this.getState().isTrackingNextIndentation&&(this.shouldTrackNextIndentation=!0)}setInput(e){this.originalText=e.replace(/(\r\n)/g,"\n").replace(/\r/g,"\n").replace(/[\n\r]+$/,""),this.lines=this.originalText.split("\n"),this.reset()}getState(){return this.states[this.state]}getCurrentLine(){return this.lines[this.yylineno-1]}getCurrentLineIndentation(){return this.getCurrentLine().match(/^(\s*)/g)[0].length}getLastRecordedIndentation(){return 0===this.indentation.length?[0,!1]:this.indentation[this.indentation.length-1]}isAtTheEndOfText(){return this.isAtTheEndOfLine()&&this.yylloc.first_line>=this.lines.length}isAtTheEndOfLine(){return this.yylloc.last_column>this.getCurrentLine().length}},Oe.yy=y,Oe.yy.declarations={},Oe.yy.parseError=function(e){throw e},Oe.yy.registerDeclaration=function(e,t,n){if(!this.areDeclarationsHandled){if(this.declarations[e])throw new Error(`Duplicate declaration found for variable: ${e}`);this.declarations[e]={variableName:e,expression:t,explicitType:n}}};class ve{}class Ce extends ve{constructor(e,t=!0,n=[],s){super(),this.text=e,this.isAvailable=t,this.hashtags=n,this.metadata=s}}var Ae={Result:ve,TextResult:class extends ve{constructor(e,t,n){super(),this.text=e,this.hashtags=t,this.metadata=n}},CommandResult:class extends ve{constructor(e,t,n){super(),this.command=e,this.hashtags=t,this.metadata=n}},OptionsResult:class extends ve{constructor(e,t){super(),this.options=e.map((e=>new Ce(e.text,e.isAvailable,e.hashtags))),this.metadata=t}select(e=-1){if(e<0||e>=this.options.length)throw new Error(`Cannot select option #${e}, there are ${this.options.length} options`);this.selected=e}}};class $e{constructor(){this.data={}}set(e,t){this.data[e]=t}get(e){return this.data[e]}}const ke=y.types;var Le={Runner:class{constructor(){this.noEscape=!1,this.yarnNodes={},this.variables=new $e,this.functions={}}load(e){if(!e)throw new Error("No dialogue supplied");let t;t="string"==typeof e?function(e){const t=[],n=e.split(/\r?\n+/).filter((e=>!e.match(/^\s*$/)));let s,i=null,a=!1,o="",r=0;for(;"#"===n[r].trim()[0];)s||(s=[]),s.push(n[r].trim().substr(1)),r+=1;for(;r<n.length;r+=1)if("==="===n[r].trim())a=!1,s&&(i.filetags=s),t.push(i),i=null;else if(a)i.body+=`${n[r].replace(o,"")}\n`;else if("---"===n[r].trim())a=!0,i.body="",o=n[r].match(/^\s*/)[0];else if(n[r].indexOf(":")>-1){const[e,t]=n[r].split(":"),s=e.trim(),a=t.trim();if("body"!==s){if(null==i&&(i={}),i[s])throw new Error(`Duplicate tag on node: ${s}`);i[s]=a}}return t}(e):e,t.forEach((e=>{if(!e.title)throw new Error(`Node needs a title: ${JSON.stringify(e)}`);if(e.title.split(".").length>1)throw new Error(`Node title cannot contain a dot: ${e.title}`);if(!e.body)throw new Error(`Node needs a body: ${JSON.stringify(e)}`);if(this.yarnNodes[e.title])throw new Error(`Duplicate node title: ${e.title}`);this.yarnNodes[e.title]=e})),Oe.yy.areDeclarationsHandled=!1,Oe.yy.declarations={},this.handleDeclarations(t),Oe.yy.areDeclarationsHandled=!0}setVariableStorage(e){if("function"!=typeof e.set||"function"!=typeof e.get)throw new Error('Variable Storage object must contain both a "set" and "get" function');this.variables=e}handleDeclarations(e){const t={Number:0,String:"",Boolean:!1},n=e.reduce(((e,t)=>[...e,...t.body.split(/\r?\n+/)]),[]),s=n.reduce(((e,t)=>t.match(/^<<declare .+>>/)?[...e,t]:e),[]);s.length&&Oe.parse(s.join("\n")),Object.entries(Oe.yy.declarations).forEach((([e,{expression:n,explicitType:s}])=>{const i=this.evaluateExpressionOrLiteral(n);if(s&&typeof i!=typeof t[s])throw new Error(`Cannot declare value ${i} as type ${s} for variable ${e}`);this.variables.get(e)||this.variables.set(e,i)}))}registerFunction(e,t){if("function"!=typeof t)throw new Error("Registered function must be...well...a function");this.functions[e]=t}*run(e){let t=e;for(;t;){const n=this.yarnNodes[t];if(void 0===n)throw new Error(`Node "${e}" does not exist`);const s=Array.from(Oe.parse(n.body)),i=u({},n);delete i.body;const a=yield*this.evalNodes(s,i);t=a&&a.jump}}*evalNodes(e,t){let n=[],s="";const i=e.filter(Boolean);for(let e=0;e<i.length;e+=1){const a=i[e],o=i[e+1];if(a instanceof ke.Text||a instanceof ke.Expression)s+=this.evaluateExpressionOrLiteral(a).toString(),o&&a.lineNum===o.lineNum&&(o instanceof ke.Text||o instanceof ke.Expression)||(yield new Ae.TextResult(s,a.hashtags,t),s="");else if(a instanceof ke.Shortcut){if(n.push(a),!(o instanceof ke.Shortcut)){const e=yield*this.handleShortcuts(n,t);if(e&&(e.stop||e.jump))return e;n=[]}}else if(a instanceof ke.Assignment)this.evaluateAssignment(a);else if(a instanceof ke.Conditional){const e=this.evaluateConditional(a);if(e){const n=yield*this.evalNodes(e,t);if(n&&(n.stop||n.jump))return n}}else{if(a instanceof y.JumpCommandNode)return{jump:a.destination};if(a instanceof y.StopCommandNode)return{stop:!0};{const e=this.evaluateExpressionOrLiteral(a.command);yield new Ae.CommandResult(e,a.hashtags,t)}}}}*handleShortcuts(e,t){const n=e.map((e=>{let t=!0;e.conditionalExpression&&!this.evaluateExpressionOrLiteral(e.conditionalExpression)&&(t=!1);const n=this.evaluateExpressionOrLiteral(e.text);return Object.assign(e,{isAvailable:t,text:n})})),s=new Ae.OptionsResult(n,t);if(yield s,"number"!=typeof s.selected)throw new Error("No option selected before resuming dialogue");{const e=n[s.selected];if(e.content)return yield*this.evalNodes(e.content,t)}}evaluateAssignment(e){const t=this.evaluateExpressionOrLiteral(e.expression),n=this.variables.get(e.variableName);if(n&&typeof n!=typeof t)throw new Error(`Variable ${e.variableName} is already type ${typeof n}; cannot set equal to ${t} of type ${typeof t}`);this.variables.set(e.variableName,t)}evaluateConditional(e){if("IfNode"===e.type){if(this.evaluateExpressionOrLiteral(e.expression))return e.statement}else{if("IfElseNode"!==e.type&&"ElseIfNode"!==e.type)return e.statement;if(this.evaluateExpressionOrLiteral(e.expression))return e.statement;if(e.elseStatement)return this.evaluateConditional(e.elseStatement)}return null}evaluateFunctionCall(e){if(this.functions[e.functionName])return this.functions[e.functionName](...e.args.map(this.evaluateExpressionOrLiteral,this));throw new Error(`Function "${e.functionName}" not found`)}evaluateExpressionOrLiteral(e){if(Array.isArray(e))return e.reduce(((e,t)=>e+this.evaluateExpressionOrLiteral(t).toString()),"");const t={UnaryMinusExpressionNode:e=>-e,ArithmeticExpressionAddNode:(e,t)=>e+t,ArithmeticExpressionMinusNode:(e,t)=>e-t,ArithmeticExpressionExponentNode:(e,t)=>e**t,ArithmeticExpressionMultiplyNode:(e,t)=>e*t,ArithmeticExpressionDivideNode:(e,t)=>e/t,ArithmeticExpressionModuloNode:(e,t)=>e%t,NegatedBooleanExpressionNode:e=>!e,BooleanOrExpressionNode:(e,t)=>e||t,BooleanAndExpressionNode:(e,t)=>e&&t,BooleanXorExpressionNode:(e,t)=>!!(e^t),EqualToExpressionNode:(e,t)=>e===t,NotEqualToExpressionNode:(e,t)=>e!==t,GreaterThanExpressionNode:(e,t)=>e>t,GreaterThanOrEqualToExpressionNode:(e,t)=>e>=t,LessThanExpressionNode:(e,t)=>e<t,LessThanOrEqualToExpressionNode:(e,t)=>e<=t,TextNode:e=>e.text,EscapedCharacterNode:e=>this.noEscape?e.text:e.text.slice(1),NumericLiteralNode:e=>parseFloat(e.numericLiteral),StringLiteralNode:e=>`${e.stringLiteral}`,BooleanLiteralNode:e=>"true"===e.booleanLiteral,VariableNode:e=>this.variables.get(e.variableName),FunctionCallNode:e=>this.evaluateFunctionCall(e),InlineExpressionNode:e=>e}[e.type];if(!t)throw new Error(`node type not recognized: ${e.type}`);return t(e instanceof ke.Expression?this.evaluateExpressionOrLiteral(e.expression||e.expression1):e,e.expression2?this.evaluateExpressionOrLiteral(e.expression2):e)}},TextResult:Ae.TextResult,CommandResult:Ae.CommandResult,OptionsResult:Ae.OptionsResult};function Ie(e,t){e.markup=[],function(e){const t=e.text.match(/^(\S+):\s+/);t&&(e.text=e.text.replace(t[0],""),e.markup.push({name:"character",properties:{name:t[1]}}))}(e),function(e,t){const n=[];let s=!1;const i=/(^|[^\\])\[(.*?[^\\])\](.|$)/;let a=e.text,o="",r=a.match(i);for(;r;){const{index:e}=r,[l,d,c,h]=r,p=/\s/.test(d),f=/\s/.test(h),m=u(u({},Re(c,t)),{},{position:o.length+e+d.length});if(s&&"nomarkup"!==m.name)o+=a.slice(0,e+l.length-1),a=a.slice(e+l.length-1);else{const t="select"===m.name||"plural"===m.name||"ordinal"===m.name,s=!t&&m.isSelfClosing&&m.properties&&!1!==m.properties.trimwhitespace&&(0===e&&f||p&&f);m.properties&&delete m.properties.trimwhitespace;const r=d+(m.replacement||"")+(s?h.slice(1):h);a=a.replace(i,r),o+=a.slice(0,e+r.slice(1).length),a=a.slice(e+r.slice(1).length),t||"nomarkup"===m.name||n.push(m)}"nomarkup"===m.name&&(s=!m.isClosing),r=a.match(i)}e.text=o+a;const l=/\\(\[|\])/;r=e.text.match(l),a=e.text,o="";for(;r;){const e=r[1];n.forEach((e=>{e.position>o.length+r.index&&(e.position-=1)})),a=a.replace(l,e),o+=a.slice(0,r.index+1),a=a.slice(r.index+1),r=a.match(l)}e.text=o+a;const d={};n.forEach((t=>{if(d[t.name]||(d[t.name]=[]),t.isClosing&&!d[t.name].length)throw new Error(`Encountered closing ${t.name} tag before opening tag`);if(t.isClosing){const n=d[t.name].pop();e.markup.push({name:n.name,position:n.position,properties:n.properties,length:t.position-n.position})}else if(t.isSelfClosing)e.markup.push({name:t.name,position:t.position,properties:t.properties,length:0});else if(t.isCloseAll){const n=Object.values(d).flat();for(;n.length;){const s=n.pop();e.markup.push({name:s.name,position:s.position,properties:s.properties,length:t.position-s.position})}}else d[t.name].push({name:t.name,position:t.position,properties:t.properties})}))}(e,t),e.text=e.text.replace(/(?:\\(.))/g,"$1")}function Re(e,t){const n=e.match(/^\/?([^\s=/]+)(\/|\s|$)/),s="/"===e[0],i="/"===e[e.length-1];if("/"===e)return{name:"closeall",isCloseAll:!0};if(s)return{name:n[1],isClosing:!0};{const s=(n?e.replace(n[0],""):e).match(/(\S+?".*?"|[^\s/]+)/g);let a={};s&&(a=s.reduce(((e,t)=>u(u({},e),function(e){const[t,...n]=e.split("="),s=n.join("=");if(!t||!s)throw new Error(`Invalid markup property assignment: ${e}`);let i;i="true"===s||"false"===s?"true"===s:/^-?\d*\.?\d+$/.test(s)?+s:'"'===s[0]&&'"'===s[s.length-1]?s.slice(1,-1):s;return{[t]:i}}(t))),{}));const o=n&&n[1]||Object.keys(a)[0];let r;return"select"===o?r=function(e){return e[e.value]}(a):"plural"===o?r=function(e,t){return e[new Intl.PluralRules(t).select(e.value)].replace(/%/g,e.value)}(a,t):"ordinal"===o&&(r=function(e,t){return e[new Intl.PluralRules(t,{type:"ordinal"}).select(e.value)].replace(/%/g,e.value)}(a,t)),{name:o,properties:a,isSelfClosing:i,replacement:r}}}Le.OptionsResult=Ae.OptionsResult,Le.TextResult=Ae.TextResult,Le.CommandResult=Ae.CommandResult;class Se{constructor({dialogue:e,variableStorage:t,functions:n,handleCommand:s,combineTextAndOptionsResults:i,locale:a,startAt:o="Start"}){this.handleCommand=s,this.combineTextAndOptionsResults=i,this.bondage=Le,this.bufferedNode=null,this.currentResult=null,this.history=[],this.locale=a,this.runner=new Le.Runner,this.runner.noEscape=!0,this.runner.load(e),t&&(t.display=t.display||t.get,this.runner.setVariableStorage(t)),n&&Object.entries(n).forEach((e=>{this.registerFunction(...e)})),this.jump(o)}jump(e){this.generator=this.runner.run(e),this.bufferedNode=null,this.advance()}advance(e){void 0!==e&&this.currentResult&&this.currentResult.select&&this.currentResult.select(e);let t=this.bufferedNode||this.generator.next().value,n=null;if(this.handleCommand)for(;t instanceof Le.CommandResult;)this.handleCommand(t),t=this.generator.next().value;if(!(t instanceof Le.OptionsResult)){const e=this.generator.next();n=e.value,t instanceof Le.TextResult&&this.combineTextAndOptionsResults&&n instanceof Le.OptionsResult?(t=Object.assign(n,t),n=null):t&&e.done&&(t=Object.assign(t,{isDialogueEnd:!0}))}this.currentResult&&this.history.push(this.currentResult),t instanceof Le.TextResult?Ie(t,this.locale):t instanceof Le.OptionsResult&&(t.text&&Ie(t,this.locale),t.options.forEach((e=>{Ie(e,this.locale)}))),this.currentResult=t,this.bufferedNode=n}registerFunction(e,t){this.runner.registerFunction(e,t)}}const{OptionsResult:_e,TextResult:qe,CommandResult:De}=Le;function Me({dialogue:e,startAt:n="Start",functions:s,variableStorage:a,handleCommand:o=(()=>{}),combineTextAndOptionsResults:l=!0,onDialogueEnd:d=(()=>{}),defaultOption:u="Next",finalOption:c="End",customNode:h,runner:p,locale:f}){const m=t.useRef(p||null);null===m.current&&(m.current=new Se({dialogue:e,startAt:n,functions:s,variableStorage:a,handleCommand:o,combineTextAndOptionsResults:l,locale:f})),t.useEffect((()=>{m.current.combineTextAndOptionsResults=l,m.current.handleCommand=o,m.current.variableStorage=a}),[l,o,a]);const x=function(){const[e,n]=t.useState(0);return()=>n((e=>e+1))}(),T=t.useCallback((e=>{m.current.advance(e),x(),m.current.currentResult||d()}),[m.current]);return i.default.createElement(r,{className:"mnbroatch-react-dialogue-tree",currentResult:m.current.currentResult,history:m.current.history,advance:T,defaultOption:u,finalOption:c,customNode:h})}function je({node:{text:e,options:t,selected:n,isDialogueEnd:s},defaultOption:a,finalOption:o,isHistory:r,advance:l}){let d;return t||r?t&&(d=t.filter(((e,t)=>!r||t===n)).map((({text:e,isAvailable:t},n)=>({text:e,className:["dialogue-node__option",!t&&"dialogue-node__option--disabled"].filter(Boolean).join(" "),onClick:!r&&t?()=>{l(n)}:void 0})))):d=[{text:s?o:a,className:["dialogue-node__option",s&&"dialogue-node__option--final",!s&&"dialogue-node__option--default"].filter(Boolean).join(" "),onClick:r?void 0:()=>{l()}}],i.default.createElement("div",{className:["dialogue-node",r&&"dialogue-node--history"].filter(Boolean)},e,d&&i.default.createElement("ul",{className:"dialogue-node__options"},d.map((({text:e,className:t,isAvailable:n,onClick:s},a)=>i.default.createElement("li",{key:a,className:t,onClick:s},e)))))}Se.OptionsResult=_e,Se.TextResult=qe,Se.CommandResult=De,Me.propTypes={dialogue:a.default.oneOfType([a.default.string,a.default.arrayOf(a.default.shape({title:a.default.string.isRequired,body:a.default.string.isRequired}))]).isRequired,runner:a.default.object,startAt:a.default.string,functions:a.default.objectOf(a.default.func),variableStorage:a.default.shape({get:a.default.func,set:a.default.func}),handleCommand:a.default.func,combineTextAndOptionsResults:a.default.bool,onDialogueEnd:a.default.func,defaultOption:a.default.string,finalOption:a.default.string,locale:a.default.string,customNode:a.default.elementType},je.propTypes={node:a.default.shape({text:a.default.string,options:a.default.arrayOf(a.default.shape({text:a.default.string,isAvailable:a.default.bool})),selected:a.default.number,isDialogueEnd:a.default.bool}),defaultOption:a.default.string,finalOption:a.default.string,isHistory:a.default.bool,advance:a.default.func},e.DialogueNode=je,e.default=Me,Object.defineProperty(e,"__esModule",{value:!0})}));

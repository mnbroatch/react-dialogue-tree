!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react"),require("yarn-bound/src/index")):"function"==typeof define&&define.amd?define(["exports","react","yarn-bound/src/index"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["react-dialogue-tree"]={},e.React,e.YarnBound)}(this,(function(e,t,a){"use strict";function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=n(t),l=n(a);function r({node:e,node:{text:t,options:a,selected:n,isDialogueEnd:l},defaultOption:r,isHistory:i,advance:d}){let u;return u=a?a.filter(((e,t)=>!i||t===n)).map(((e,t)=>o.default.createElement("li",{key:t,className:["dialogue-node__option",!e.isAvailable&&"dialogue-node__option--disabled"].filter(Boolean).join(" "),onClick:!i&&e.isAvailable?()=>{d(t)}:void 0},e.text))):!l&&!i&&o.default.createElement("li",{className:"dialogue-node__option dialogue-node__option--default",onClick:i?void 0:()=>{d()}},r),o.default.createElement("div",{className:"dialogue-node"},t,u&&o.default.createElement("ul",{className:"dialogue-node__options"},u))}function i({children:e,scrollSpeed:a=8}){const n=t.useRef();return t.useEffect((()=>{if(!n.current||!n.current.lastChild)return;const e=n.current.scrollHeight-Math.max(n.current.lastChild.offsetHeight,n.current.offsetHeight),t=()=>{n.current.scrollTop+=a,n.current.scrollTop<e&&requestAnimationFrame(t)};requestAnimationFrame(t)}),[e,a]),o.default.createElement("div",{className:"chat-scroller"},o.default.createElement("div",{className:"chat-scroller__inner",ref:n,style:{height:"100%",overflowY:"auto"}},e))}function d({currentResult:e,history:t,advance:a,defaultOption:n}){const l=e?[...t,e]:t;return o.default.createElement("div",{className:"dialogue-tree"},o.default.createElement(i,{scrollSpeed:8},l.map(((e,l)=>e&&o.default.createElement("div",{className:"dialogue-tree__node-spacer",key:l},o.default.createElement("div",{className:"dialogue-tree__node-wrapper"},o.default.createElement(r,{node:e,advance:a,defaultOption:n,isHistory:t.includes(e)})))))))}e.DialogueNode=r,e.default=function({dialogue:e,startAt:a="Start",functions:n,variableStorage:r,handleCommand:i,combineTextAndOptionsResults:u=!0,onDialogueEnd:s=(()=>{}),defaultOption:c="Next"}){const f=t.useMemo((()=>new l.default({dialogue:e,startAt:a,functions:n,variableStorage:r,handleCommand:i,combineTextAndOptionsResults:u})),[e]);t.useEffect((()=>{f.combineTextAndOptionsResults=u,f.handleCommand=i,f.variableStorage=r}),[u,i,r]);const m=function(){const[e,a]=t.useState(0);return()=>a((e=>e+1))}(),p=t.useCallback((e=>{f.advance(e),m(),f.currentResult.isDialogueEnd&&s()}),[f]);return o.default.createElement(d,{className:"mnbroatch-react-dialogue-tree",currentResult:f.currentResult,history:f.history,advance:p,defaultOption:c})},Object.defineProperty(e,"__esModule",{value:!0})}));

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ReactDialogueTree={},e.React)}(this,(function(e,t){"use strict";function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=n(t);function i({node:e,node:{text:t,options:n,selected:i,isDialogueEnd:a},defaultOption:o,isHistory:r,advance:l}){let d;return d=n?n.filter(((e,t)=>!r||t===i)).map(((e,t)=>s.default.createElement("li",{key:t,className:["dialogue-node__option",!e.isAvailable&&"dialogue-node__option--disabled"].filter(Boolean).join(" "),onClick:!r&&e.isAvailable?()=>{l(t)}:void 0},e.text))):!a&&!r&&s.default.createElement("li",{className:"dialogue-node__option dialogue-node__option--default",onClick:r?void 0:()=>{l()}},o),s.default.createElement("div",{className:"dialogue-node"},t,d&&s.default.createElement("ul",{className:"dialogue-node__options"},d))}function a({children:e,scrollSpeed:n=8}){const i=t.useRef();return t.useEffect((()=>{if(!i.current||!i.current.lastChild)return;const e=i.current.scrollHeight-Math.max(i.current.lastChild.offsetHeight,i.current.offsetHeight),t=()=>{i.current.scrollTop+=n,i.current.scrollTop<e&&requestAnimationFrame(t)};requestAnimationFrame(t)}),[e,n]),s.default.createElement("div",{className:"chat-scroller"},s.default.createElement("div",{className:"chat-scroller__inner",ref:i,style:{height:"100%",overflowY:"auto"}},e))}function o({currentResult:e,history:t,advance:n,defaultOption:o}){const r=e?[...t,e]:t;return s.default.createElement("div",{className:"dialogue-tree"},s.default.createElement(a,{scrollSpeed:8},r.map(((e,a)=>e&&s.default.createElement("div",{className:"dialogue-tree__node-spacer",key:a},s.default.createElement("div",{className:"dialogue-tree__node-wrapper"},s.default.createElement(i,{node:e,advance:n,defaultOption:o,isHistory:t.includes(e)})))))))}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class c{}class u{}class h{}class p{}class m{}class x{}class T{}class f{}var E={types:{Text:c,Shortcut:u,Conditional:h,Assignment:p,Literal:m,Expression:x,FunctionCall:T,Command:f},DialogShortcutNode:class extends u{constructor(e,t,n,s=[],i){super(),this.type="DialogShortcutNode",this.text=e,this.content=t,this.lineNum=n.first_line,this.hashtags=s,this.conditionalExpression=i}},IfNode:class extends h{constructor(e,t){super(),this.type="IfNode",this.expression=e,this.statement=t}},IfElseNode:class extends h{constructor(e,t,n){super(),this.type="IfElseNode",this.expression=e,this.statement=t,this.elseStatement=n}},ElseNode:class extends h{constructor(e){super(),this.type="ElseNode",this.statement=e}},ElseIfNode:class extends h{constructor(e,t,n){super(),this.type="ElseIfNode",this.expression=e,this.statement=t,this.elseStatement=n}},GenericCommandNode:class extends f{constructor(e,t,n=[]){super(),this.type="GenericCommandNode",this.command=e,this.hashtags=n,this.lineNum=t?t.first_line:-1}},JumpCommandNode:class extends f{constructor(e){super(),this.type="JumpCommandNode",this.destination=e}},StopCommandNode:class extends f{constructor(){super(),this.type="StopCommandNode"}},TextNode:class extends c{constructor(e,t,n=[]){super(),this.type="TextNode",this.text=e,this.lineNum=t?t.first_line:-1,this.hashtags=n}},NumericLiteralNode:class extends m{constructor(e){super(),this.type="NumericLiteralNode",this.numericLiteral=e}},StringLiteralNode:class extends m{constructor(e){super(),this.type="StringLiteralNode",this.stringLiteral=e}},BooleanLiteralNode:class extends m{constructor(e){super(),this.type="BooleanLiteralNode",this.booleanLiteral=e}},VariableNode:class extends m{constructor(e){super(),this.type="VariableNode",this.variableName=e}},UnaryMinusExpressionNode:class extends x{constructor(e){super(),this.type="UnaryMinusExpressionNode",this.expression=e}},ArithmeticExpressionAddNode:class extends x{constructor(e,t){super(),this.type="ArithmeticExpressionAddNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionMinusNode:class extends x{constructor(e,t){super(),this.type="ArithmeticExpressionMinusNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionMultiplyNode:class extends x{constructor(e,t){super(),this.type="ArithmeticExpressionMultiplyNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionExponentNode:class extends x{constructor(e,t){super(),this.type="ArithmeticExpressionExponentNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionDivideNode:class extends x{constructor(e,t){super(),this.type="ArithmeticExpressionDivideNode",this.expression1=e,this.expression2=t}},ArithmeticExpressionModuloNode:class extends x{constructor(e,t){super(),this.type="ArithmeticExpressionModuloNode",this.expression1=e,this.expression2=t}},NegatedBooleanExpressionNode:class extends x{constructor(e){super(),this.type="NegatedBooleanExpressionNode",this.expression=e}},BooleanOrExpressionNode:class extends x{constructor(e,t){super(),this.type="BooleanOrExpressionNode",this.expression1=e,this.expression2=t}},BooleanAndExpressionNode:class extends x{constructor(e,t){super(),this.type="BooleanAndExpressionNode",this.expression1=e,this.expression2=t}},BooleanXorExpressionNode:class extends x{constructor(e,t){super(),this.type="BooleanXorExpressionNode",this.expression1=e,this.expression2=t}},EqualToExpressionNode:class extends x{constructor(e,t){super(),this.type="EqualToExpressionNode",this.expression1=e,this.expression2=t}},NotEqualToExpressionNode:class extends x{constructor(e,t){super(),this.type="NotEqualToExpressionNode",this.expression1=e,this.expression2=t}},GreaterThanExpressionNode:class extends x{constructor(e,t){super(),this.type="GreaterThanExpressionNode",this.expression1=e,this.expression2=t}},GreaterThanOrEqualToExpressionNode:class extends x{constructor(e,t){super(),this.type="GreaterThanOrEqualToExpressionNode",this.expression1=e,this.expression2=t}},LessThanExpressionNode:class extends x{constructor(e,t){super(),this.type="LessThanExpressionNode",this.expression1=e,this.expression2=t}},LessThanOrEqualToExpressionNode:class extends x{constructor(e,t){super(),this.type="LessThanOrEqualToExpressionNode",this.expression1=e,this.expression2=t}},SetVariableEqualToNode:class extends p{constructor(e,t){super(),this.type="SetVariableEqualToNode",this.variableName=e,this.expression=t}},FunctionResultNode:class extends T{constructor(e,t,n,s=[]){super(),this.type="FunctionResultNode",this.functionName=e,this.args=t,this.lineNum=n?n.first_line:-1,this.hashtags=s}},InlineExpressionNode:class extends x{constructor(e,t,n=[]){super(),this.type="InlineExpressionNode",this.expression=e,this.lineNum=t.first_line,this.hashtags=n}}};const g={Whitespace:null,Indent:null,Dedent:null,EndOfLine:/\n/,EndOfInput:null,Number:/-?[0-9]+(\.[0-9+])?/,String:/"([^"\\]*(?:\\.[^"\\]*)*)"/,BeginCommand:/<</,EndCommand:/>>/,Variable:/\$([A-Za-z0-9_.])+/,ShortcutOption:/->/,Hashtag:/#([^(\s|#|//)]+)/,Comment:/\/\/.*/,OptionStart:/\[\[/,OptionDelimit:/\|/,OptionEnd:/\]\]/,If:/if(?!\w)/,ElseIf:/elseif(?!\w)/,Else:/else(?!\w)/,EndIf:/endif(?!\w)/,Jump:/jump(?!\w)/,Stop:/stop(?!\w)/,Set:/set(?!\w)/,Declare:/declare(?!\w)/,As:/as(?!\w)/,ExplicitType:/(String|Number|Bool)(?=>>)/,True:/true(?!\w)/,False:/false(?!\w)/,Null:/null(?!\w)/,LeftParen:/\(/,RightParen:/\)/,Comma:/,/,UnaryMinus:/-(?!\s)/,EqualTo:/(==|is(?!\w)|eq(?!\w))/,GreaterThan:/(>|gt(?!\w))/,GreaterThanOrEqualTo:/(>=|gte(?!\w))/,LessThan:/(<|lt(?!\w))/,LessThanOrEqualTo:/(<=|lte(?!\w))/,NotEqualTo:/(!=|neq(?!\w))/,Or:/(\|\||or(?!\w))/,And:/(&&|and(?!\w))/,Xor:/(\^|xor(?!\w))/,Not:/(!|not(?!\w))/,EqualToOrAssign:/(=|to(?!\w))/,Add:/\+/,Minus:/-/,Exponent:/\*\*/,Multiply:/\*/,Divide:/\//,Modulo:/%/,AddAssign:/\+=/,MinusAssign:/-=/,MultiplyAssign:/\*=/,DivideAssign:/\/=/,Identifier:/[a-zA-Z0-9_:.]+/,EscapedCharacter:/\\./,Text:/[^\\]/,BeginInlineExp:/{/,EndInlineExp:/}/};class y{constructor(){this.transitions=[],this.textRule=null,this.isTrackingNextIndentation=!1,this.isEmittingEndOfLineTokens=!1}addTransition(e,t,n){return this.transitions.push({token:e,regex:g[e],state:t||null,delimitsText:n||!1}),this}addTextRule(e,t){if(this.textRule)throw new Error("Cannot add more than one text rule to a state.");const n=[];this.transitions.forEach((e=>{e.delimitsText&&n.push(`(${e.regex.source})`)}));const s=`((?!${n.join("|")}).)+`;return this.addTransition(e,t),this.textRule=this.transitions[this.transitions.length-1],this.textRule.regex=new RegExp(s),this}setTrackNextIndentation(e){return this.isTrackingNextIndentation=e,this}}var N={makeStates:function(){return{base:(new y).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","command",!0).addTransition("BeginInlineExp","inlineExpression",!0).addTransition("ShortcutOption","shortcutOption").addTextRule("Text"),shortcutOption:(new y).setTrackNextIndentation(!0).addTransition("EscapedCharacter",null,!0).addTransition("Comment",null,!0).addTransition("Hashtag",null,!0).addTransition("BeginCommand","expression",!0).addTransition("BeginInlineExp","inlineExpressionInShortcut",!0).addTextRule("Text","base"),command:(new y).addTransition("If","expression").addTransition("Else").addTransition("ElseIf","expression").addTransition("EndIf").addTransition("Set","assignment").addTransition("Declare","declare").addTransition("Jump","jump").addTransition("Stop","stop").addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0).addTextRule("Text"),commandArg:(new y).addTextRule("Text"),commandParenArgOrExpression:(new y).addTransition("EndCommand","base",!0).addTransition("LeftParen","expression").addTransition("Variable","expression").addTransition("Number","expression").addTransition("String").addTransition("True").addTransition("False").addTransition("Null").addTransition("RightParen"),assignment:(new y).addTransition("Variable").addTransition("EqualToOrAssign","expression"),declare:(new y).addTransition("Variable").addTransition("EndCommand","base").addTransition("EqualToOrAssign","expression"),jump:(new y).addTransition("Identifier").addTransition("BeginInlineExp","inlineExpressionInCommand",!0).addTransition("EndCommand","base",!0),stop:(new y).addTransition("EndCommand","base",!0),expression:(new y).addTransition("As").addTransition("ExplicitType").addTransition("EndCommand","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule(),inlineExpression:(new y).addTransition("EndInlineExp","base").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInCommand:(new y).addTransition("EndInlineExp","command").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base"),inlineExpressionInShortcut:(new y).addTransition("EndInlineExp","shortcutOption").addTransition("Number").addTransition("String").addTransition("LeftParen").addTransition("RightParen").addTransition("EqualTo").addTransition("EqualToOrAssign").addTransition("NotEqualTo").addTransition("GreaterThanOrEqualTo").addTransition("GreaterThan").addTransition("LessThanOrEqualTo").addTransition("LessThan").addTransition("Add").addTransition("UnaryMinus").addTransition("Minus").addTransition("Exponent").addTransition("Multiply").addTransition("Divide").addTransition("Modulo").addTransition("And").addTransition("Or").addTransition("Xor").addTransition("Not").addTransition("Variable").addTransition("Comma").addTransition("True").addTransition("False").addTransition("Null").addTransition("Identifier").addTextRule("Text","base")}}};var b=function(e,t,n,s){for(n=n||{},s=e.length;s--;n[e[s]]=t);return n},w=[1,19],O=[1,20],v=[1,12],A=[1,18],C=[1,17],k=[5,18,19,24,35,37,78],$=[1,24],L=[1,25],I=[1,27],R=[1,28],S=[5,14,16,18,19,22,24,35,37,78],_=[1,31],q=[1,35],M=[1,36],D=[1,37],j=[1,38],B=[5,14,16,18,19,22,24,27,35,37,78],P=[5,14,16,18,22,24,27,35,37,78],G=[1,42],F=[1,52],V=[1,51],H=[1,46],U=[1,47],X=[1,48],J=[1,53],z=[1,54],Z=[1,55],W=[1,56],Y=[1,57],K=[5,16,18,19,24,35,37,78],Q=[1,74],ee=[1,75],te=[1,76],ne=[1,77],se=[1,78],ie=[1,79],ae=[1,80],oe=[1,81],re=[1,82],le=[1,83],de=[1,84],ce=[1,85],ue=[1,86],he=[1,87],pe=[1,88],me=[27,47,52,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,71,79],xe=[27,47,52,54,55,56,57,58,61,62,63,64,65,66,67,68,69,71,79],Te=[27,47,52,71,79],fe=[1,125],Ee=[1,126],ge=[27,47,52,54,55,61,62,63,64,65,66,67,68,69,71,79],ye=[27,47,52,61,62,63,64,65,66,67,68,69,71,79],Ne=[52,71],be=[16,18,19,24,35,78],we={trace:function(){},yy:{},symbols_:{error:2,node:3,statements:4,EndOfInput:5,conditionalBlock:6,statement:7,text:8,shortcut:9,genericCommand:10,assignmentCommand:11,jumpCommand:12,stopCommand:13,Comment:14,hashtags:15,EndOfLine:16,escapedTextRaw:17,Text:18,EscapedCharacter:19,escapedText:20,inlineExpression:21,Hashtag:22,conditional:23,BeginCommand:24,If:25,expression:26,EndCommand:27,EndIf:28,additionalConditionalBlocks:29,else:30,Else:31,elseif:32,ElseIf:33,shortcutOption:34,ShortcutOption:35,Indent:36,Dedent:37,Jump:38,Identifier:39,Stop:40,setCommandInner:41,declareCommandInner:42,Set:43,Variable:44,EqualToOrAssign:45,Declare:46,As:47,ExplicitType:48,functionArgument:49,functionCall:50,LeftParen:51,RightParen:52,UnaryMinus:53,Add:54,Minus:55,Exponent:56,Multiply:57,Divide:58,Modulo:59,Not:60,Or:61,And:62,Xor:63,EqualTo:64,NotEqualTo:65,GreaterThan:66,GreaterThanOrEqualTo:67,LessThan:68,LessThanOrEqualTo:69,parenExpressionArgs:70,Comma:71,literal:72,True:73,False:74,Number:75,String:76,Null:77,BeginInlineExp:78,EndInlineExp:79,$accept:0,$end:1},terminals_:{2:"error",5:"EndOfInput",14:"Comment",16:"EndOfLine",18:"Text",19:"EscapedCharacter",22:"Hashtag",24:"BeginCommand",25:"If",27:"EndCommand",28:"EndIf",31:"Else",33:"ElseIf",35:"ShortcutOption",36:"Indent",37:"Dedent",38:"Jump",39:"Identifier",40:"Stop",43:"Set",44:"Variable",45:"EqualToOrAssign",46:"Declare",47:"As",48:"ExplicitType",51:"LeftParen",52:"RightParen",53:"UnaryMinus",54:"Add",55:"Minus",56:"Exponent",57:"Multiply",58:"Divide",59:"Modulo",60:"Not",61:"Or",62:"And",63:"Xor",64:"EqualTo",65:"NotEqualTo",66:"GreaterThan",67:"GreaterThanOrEqualTo",68:"LessThan",69:"LessThanOrEqualTo",71:"Comma",73:"True",74:"False",75:"Number",76:"String",77:"Null",78:"BeginInlineExp",79:"EndInlineExp"},productions_:[0,[3,2],[4,1],[4,2],[4,1],[4,2],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,2],[7,2],[7,2],[17,1],[17,1],[17,2],[17,2],[20,1],[8,1],[8,1],[8,2],[15,1],[15,2],[23,4],[6,6],[6,4],[6,2],[30,3],[30,2],[32,4],[32,2],[29,5],[29,5],[29,3],[34,2],[34,3],[34,2],[34,2],[34,3],[34,2],[9,1],[9,5],[10,3],[12,4],[12,4],[13,3],[11,3],[11,3],[41,4],[42,4],[42,6],[26,1],[26,1],[26,3],[26,2],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,2],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[26,3],[50,3],[50,4],[70,3],[70,1],[49,1],[49,1],[49,1],[72,1],[72,1],[72,1],[72,1],[72,1],[21,3]],performAction:function(e,t,n,s,i,a,o){var r=a.length-1;switch(i){case 1:return a[r-1].flat();case 2:case 4:case 7:case 8:case 9:case 10:case 11:case 21:case 76:case 20:this.$=[a[r]];break;case 3:case 22:this.$=a[r-1].concat(a[r]);break;case 5:this.$=a[r-1].concat([a[r]]);break;case 6:case 54:case 15:case 53:case 77:case 78:this.$=a[r];break;case 12:case 14:case 28:case 31:case 32:case 48:case 55:case 25:case 39:case 41:this.$=a[r-1];break;case 13:this.$=a[r-1].map((e=>Object.assign(e,{hashtags:a[r]})));break;case 16:this.$=a[r].substring(1);break;case 17:this.$=a[r-1].concat(a[r].substring(1));break;case 18:this.$=a[r-1].substring(1).concat(a[r]);break;case 19:this.$=new s.TextNode(a[r],this._$);break;case 23:this.$=[a[r].substring(1)];break;case 24:this.$=[a[r-1].substring(1)].concat(a[r]);break;case 26:this.$=new s.IfNode(a[r-5],a[r-3].flat());break;case 27:this.$=new s.IfElseNode(a[r-3],a[r-1].flat(),a[r]);break;case 29:case 30:this.$=void 0;break;case 33:this.$=new s.ElseNode(a[r-3].flat());break;case 34:this.$=new s.ElseIfNode(a[r-4],a[r-3].flat());break;case 35:this.$=new s.ElseIfNode(a[r-2],a[r-1].flat(),a[r]);break;case 36:this.$={text:a[r]};break;case 37:this.$={text:a[r-1],conditional:a[r]};break;case 38:this.$=l(l({},a[r-1]),{},{hashtags:a[r]});break;case 40:this.$=l(l({},a[r-2]),{},{hashtags:a[r-1]});break;case 42:this.$=new s.DialogShortcutNode(a[r].text,void 0,this._$,a[r].hashtags,a[r].conditional);break;case 43:this.$=new s.DialogShortcutNode(a[r-4].text,a[r-1].flat(),this._$,a[r-4].hashtags,a[r-4].conditional);break;case 44:this.$=new s.GenericCommandNode(a[r-1],this._$);break;case 45:case 46:this.$=new s.JumpCommandNode(a[r-1]);break;case 47:this.$=new s.StopCommandNode;break;case 49:this.$=null;break;case 50:this.$=new s.SetVariableEqualToNode(a[r-2].substring(1),a[r]);break;case 51:this.$=null,s.registerDeclaration(a[r-2].substring(1),a[r]);break;case 52:this.$=null,s.registerDeclaration(a[r-4].substring(1),a[r-2],a[r]);break;case 56:this.$=new s.UnaryMinusExpressionNode(a[r]);break;case 57:this.$=new s.ArithmeticExpressionAddNode(a[r-2],a[r]);break;case 58:this.$=new s.ArithmeticExpressionMinusNode(a[r-2],a[r]);break;case 59:this.$=new s.ArithmeticExpressionExponentNode(a[r-2],a[r]);break;case 60:this.$=new s.ArithmeticExpressionMultiplyNode(a[r-2],a[r]);break;case 61:this.$=new s.ArithmeticExpressionDivideNode(a[r-2],a[r]);break;case 62:this.$=new s.ArithmeticExpressionModuloNode(a[r-2],a[r]);break;case 63:this.$=new s.NegatedBooleanExpressionNode(a[r]);break;case 64:this.$=new s.BooleanOrExpressionNode(a[r-2],a[r]);break;case 65:this.$=new s.BooleanAndExpressionNode(a[r-2],a[r]);break;case 66:this.$=new s.BooleanXorExpressionNode(a[r-2],a[r]);break;case 67:this.$=new s.EqualToExpressionNode(a[r-2],a[r]);break;case 68:this.$=new s.NotEqualToExpressionNode(a[r-2],a[r]);break;case 69:this.$=new s.GreaterThanExpressionNode(a[r-2],a[r]);break;case 70:this.$=new s.GreaterThanOrEqualToExpressionNode(a[r-2],a[r]);break;case 71:this.$=new s.LessThanExpressionNode(a[r-2],a[r]);break;case 72:this.$=new s.LessThanOrEqualToExpressionNode(a[r-2],a[r]);break;case 73:this.$=new s.FunctionResultNode(a[r-2],[]);break;case 74:this.$=new s.FunctionResultNode(a[r-3],a[r-1]);break;case 75:this.$=a[r-2].concat([a[r]]);break;case 79:this.$=new s.VariableNode(a[r].substring(1));break;case 80:case 81:this.$=new s.BooleanLiteralNode(a[r]);break;case 82:this.$=new s.NumericLiteralNode(a[r]);break;case 83:this.$=new s.StringLiteralNode(a[r]);break;case 84:this.$=new s.NullLiteralNode(a[r]);break;case 85:this.$=new s.InlineExpressionNode(a[r-1],this._$)}},table:[{3:1,4:2,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:w,19:O,20:13,21:14,23:5,24:v,34:15,35:A,78:C},{1:[3]},{5:[1,21],6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:w,19:O,20:13,21:14,23:5,24:v,34:15,35:A,78:C},b(k,[2,2],{16:$}),b(k,[2,4],{15:26,14:L,16:I,22:R}),{16:[1,29]},b([5,14,16,22,24,35,37],[2,6],{20:13,21:14,17:16,8:30,18:w,19:O,78:C}),b(S,[2,7]),b(S,[2,8]),b(S,[2,9]),b(S,[2,10]),b(S,[2,11]),{8:32,17:16,18:w,19:O,20:13,21:14,25:_,38:q,40:M,41:33,42:34,43:D,46:j,78:C},b(B,[2,20]),b(B,[2,21]),b(k,[2,42],{15:40,14:[1,41],16:[1,39],22:R}),b(P,[2,19],{19:G}),{21:49,26:43,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{8:58,17:16,18:w,19:O,20:13,21:14,78:C},b(B,[2,15]),b([5,14,16,22,24,27,35,37,78],[2,16],{17:59,18:w,19:O}),{1:[2,1]},b(k,[2,3],{16:$}),b(k,[2,5],{15:26,14:L,16:I,22:R}),b(K,[2,28]),b(S,[2,12]),b(S,[2,13]),b(S,[2,14]),b([5,14,16,18,19,24,35,37,78],[2,23],{15:60,22:R}),{4:61,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:w,19:O,20:13,21:14,23:5,24:v,34:15,35:A,78:C},b([5,14,16,22,24,27,35,37],[2,22],{20:13,21:14,17:16,8:30,18:w,19:O,78:C}),{21:49,26:62,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{8:30,17:16,18:w,19:O,20:13,21:14,27:[1,63],78:C},{27:[1,64]},{27:[1,65]},{21:67,39:[1,66],78:C},{27:[1,68]},{44:[1,69]},{44:[1,70]},b(S,[2,41],{36:[1,71]}),b([5,16,18,19,22,24,35,37,78],[2,38],{14:[1,72]}),b(S,[2,39]),b(B,[2,17]),{54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe,79:[1,73]},b(me,[2,53]),b(me,[2,54]),{21:49,26:89,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:90,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:91,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},b(me,[2,77]),b(me,[2,78]),b(me,[2,79]),{51:[1,92]},b(me,[2,80]),b(me,[2,81]),b(me,[2,82]),b(me,[2,83]),b(me,[2,84]),b([5,14,16,22,35,37],[2,36],{20:13,21:14,17:16,8:30,23:93,18:w,19:O,24:[1,94],78:C}),b(P,[2,18],{19:G}),b(S,[2,24]),{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:w,19:O,20:13,21:14,23:5,24:[1,95],29:96,30:97,32:98,34:15,35:A,78:C},{27:[1,99],54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe},b(S,[2,44]),b(S,[2,48]),b(S,[2,49]),{27:[1,100]},{27:[1,101]},b(S,[2,47]),{45:[1,102]},{45:[1,103]},{4:104,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:w,19:O,20:13,21:14,23:5,24:v,34:15,35:A,78:C},b(S,[2,40]),b([5,14,16,18,19,22,24,27,35,37,47,52,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,71,78,79],[2,85]),{21:49,26:105,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:106,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:107,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:108,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:109,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:110,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:111,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:112,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:113,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:114,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:115,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:116,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:117,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:118,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:119,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{52:[1,120],54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe},b(xe,[2,56],{59:ie}),b(Te,[2,63],{54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe}),{21:49,26:123,39:F,44:V,49:44,50:45,51:H,52:[1,121],53:U,60:X,70:122,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},b(S,[2,37]),{25:_},{8:32,17:16,18:w,19:O,20:13,21:14,25:_,28:[1,124],31:fe,33:Ee,38:q,40:M,41:33,42:34,43:D,46:j,78:C},b(K,[2,27]),{4:127,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,128],17:16,18:w,19:O,20:13,21:14,23:5,24:v,34:15,35:A,78:C},{4:129,6:3,7:4,8:6,9:7,10:8,11:9,12:10,13:11,16:[1,130],17:16,18:w,19:O,20:13,21:14,23:5,24:v,34:15,35:A,78:C},b(S,[2,25]),b(S,[2,45]),b(S,[2,46]),{21:49,26:131,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{21:49,26:132,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:w,19:O,20:13,21:14,23:5,24:v,34:15,35:A,37:[1,133],78:C},b(ge,[2,57],{56:te,57:ne,58:se,59:ie}),b(ge,[2,58],{56:te,57:ne,58:se,59:ie}),b(xe,[2,59],{59:ie}),b(xe,[2,60],{59:ie}),b(xe,[2,61],{59:ie}),b(Te,[2,62],{54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe}),b([27,47,52,61,71,79],[2,64],{54:Q,55:ee,56:te,57:ne,58:se,59:ie,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe}),b([27,47,52,61,62,71,79],[2,65],{54:Q,55:ee,56:te,57:ne,58:se,59:ie,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe}),b([27,47,52,61,62,63,71,79],[2,66],{54:Q,55:ee,56:te,57:ne,58:se,59:ie,64:le,65:de,66:ce,67:ue,68:he,69:pe}),b(ye,[2,67],{54:Q,55:ee,56:te,57:ne,58:se,59:ie}),b(ye,[2,68],{54:Q,55:ee,56:te,57:ne,58:se,59:ie}),b(ye,[2,69],{54:Q,55:ee,56:te,57:ne,58:se,59:ie}),b(ye,[2,70],{54:Q,55:ee,56:te,57:ne,58:se,59:ie}),b(ye,[2,71],{54:Q,55:ee,56:te,57:ne,58:se,59:ie}),b(ye,[2,72],{54:Q,55:ee,56:te,57:ne,58:se,59:ie}),b(me,[2,55]),b(me,[2,73]),{52:[1,134],71:[1,135]},b(Ne,[2,76],{54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe}),{27:[1,136]},{27:[1,137]},{21:49,26:138,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:w,19:O,20:13,21:14,23:5,24:[1,139],34:15,35:A,78:C},b(be,[2,30]),{6:22,7:23,8:6,9:7,10:8,11:9,12:10,13:11,17:16,18:w,19:O,20:13,21:14,23:5,24:[1,140],29:141,30:97,32:98,34:15,35:A,78:C},b(be,[2,32]),{27:[2,50],54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe},{27:[2,51],47:[1,142],54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe},b(S,[2,43]),b(me,[2,74]),{21:49,26:143,39:F,44:V,49:44,50:45,51:H,53:U,60:X,72:50,73:J,74:z,75:Z,76:W,77:Y,78:C},b(K,[2,26]),b(be,[2,29]),{27:[1,144],54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe},{8:32,17:16,18:w,19:O,20:13,21:14,25:_,28:[1,145],38:q,40:M,41:33,42:34,43:D,46:j,78:C},{8:32,17:16,18:w,19:O,20:13,21:14,25:_,28:[1,146],31:fe,33:Ee,38:q,40:M,41:33,42:34,43:D,46:j,78:C},b(K,[2,35]),{48:[1,147]},b(Ne,[2,75],{54:Q,55:ee,56:te,57:ne,58:se,59:ie,61:ae,62:oe,63:re,64:le,65:de,66:ce,67:ue,68:he,69:pe}),b(be,[2,31]),{27:[1,148]},{27:[1,149]},{27:[2,52]},b(K,[2,33]),b(K,[2,34])],defaultActions:{21:[2,1],147:[2,52]},parseError:function(e,t){if(!t.recoverable){var n=new Error(e);throw n.hash=t,n}this.trace(e)},parse:function(e){var t=this,n=[0],s=[null],i=[],a=this.table,o="",r=0,l=0,d=2,c=1,u=i.slice.call(arguments,1),h=Object.create(this.lexer),p={yy:{}};for(var m in this.yy)Object.prototype.hasOwnProperty.call(this.yy,m)&&(p.yy[m]=this.yy[m]);h.setInput(e,p.yy),p.yy.lexer=h,p.yy.parser=this,void 0===h.yylloc&&(h.yylloc={});var x=h.yylloc;i.push(x);var T=h.options&&h.options.ranges;"function"==typeof p.yy.parseError?this.parseError=p.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var f,E,g,y,N,b,w,O,v=function(){var e;return"number"!=typeof(e=h.lex()||c)&&(e=t.symbols_[e]||e),e},A={};;){if(E=n[n.length-1],this.defaultActions[E]?g=this.defaultActions[E]:(null==f&&(f=v()),g=a[E]&&a[E][f]),void 0===g||!g.length||!g[0]){var C="";for(N in O=[],a[E])this.terminals_[N]&&N>d&&O.push("'"+this.terminals_[N]+"'");C=h.showPosition?"Parse error on line "+(r+1)+":\n"+h.showPosition()+"\nExpecting "+O.join(", ")+", got '"+(this.terminals_[f]||f)+"'":"Parse error on line "+(r+1)+": Unexpected "+(f==c?"end of input":"'"+(this.terminals_[f]||f)+"'"),this.parseError(C,{text:h.match,token:this.terminals_[f]||f,line:h.yylineno,loc:x,expected:O})}if(g[0]instanceof Array&&g.length>1)throw new Error("Parse Error: multiple actions possible at state: "+E+", token: "+f);switch(g[0]){case 1:n.push(f),s.push(h.yytext),i.push(h.yylloc),n.push(g[1]),f=null,l=h.yyleng,o=h.yytext,r=h.yylineno,x=h.yylloc;break;case 2:if(b=this.productions_[g[1]][1],A.$=s[s.length-b],A._$={first_line:i[i.length-(b||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(b||1)].first_column,last_column:i[i.length-1].last_column},T&&(A._$.range=[i[i.length-(b||1)].range[0],i[i.length-1].range[1]]),void 0!==(y=this.performAction.apply(A,[o,l,r,p.yy,g[1],s,i].concat(u))))return y;b&&(n=n.slice(0,-1*b*2),s=s.slice(0,-1*b),i=i.slice(0,-1*b)),n.push(this.productions_[g[1]][0]),s.push(A.$),i.push(A._$),w=a[n[n.length-2]][n[n.length-1]],n.push(w);break;case 3:return!0}}return!0}};function Oe(){this.yy={}}Oe.prototype=we,we.Parser=Oe,we.lexer=new class{constructor(){this.states=N.makeStates(),this.state="base",this.originalText="",this.lines=[],this.indentation=[[0,!1]],this.shouldTrackNextIndentation=!1,this.previousLevelOfIndentation=0,this.reset()}reset(){this.yytext="",this.yylloc={first_column:1,first_line:1,last_column:1,last_line:1},this.yylineno=1}lex(){if(this.isAtTheEndOfText()){this.yytext="";const e=this.indentation.pop();return e&&e[1]?"Dedent":"EndOfInput"}return this.isAtTheEndOfLine()?(this.advanceLine(),"EndOfLine"):this.lexNextTokenOnCurrentLine()}advanceLine(){this.yylineno+=1;const e=this.getCurrentLine().replace(/\t/,"    ");this.lines[this.yylineno-1]=e,this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],this.yytext="",this.yylloc={first_column:1,first_line:this.yylineno,last_column:1,last_line:this.yylineno}}lexNextTokenOnCurrentLine(){const e=this.getCurrentLineIndentation();if(this.shouldTrackNextIndentation&&e>this.previousLevelOfIndentation)return this.indentation.push([e,!0]),this.shouldTrackNextIndentation=!1,this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=e,this.yytext="","Indent";if(e<this.getLastRecordedIndentation()[0]){if(this.indentation.pop()[1])return this.yytext="",this.previousLevelOfIndentation=this.getLastRecordedIndentation()[0],"Dedent";this.lexNextTokenOnCurrentLine()}e===this.previousLevelOfIndentation&&1===this.yylloc.last_column&&(this.yylloc.last_column+=e);const t=this.getState().transitions;for(let n=0,s=t.length;n<s;n+=1){const s=t[n],i=this.getCurrentLine().substring(this.yylloc.last_column-1).match(s.regex);if(null!==i&&0===i.index){const t=i[0];this.yytext=this.getCurrentLine().substr(this.yylloc.last_column-1,t.length),"String"===s.token&&(this.yytext=this.yytext.substring(1,this.yytext.length-1).replace(/\\/g,"")),this.yylloc.first_column=this.yylloc.last_column,this.yylloc.last_column+=t.length,s.state&&(this.setState(s.state),this.shouldTrackNextIndentation&&this.getLastRecordedIndentation()[0]<e&&this.indentation.push([e,!1]));const n=this.states[s.state],a=!n||n.transitions.find((e=>"Text"===e.token));if("EndInlineExp"!==s.token&&"EscapedCharacter"!==s.token||!a){const e=this.getCurrentLine().substring(this.yylloc.last_column-1).match(/^\s*/);e[0]&&(this.yylloc.last_column+=e[0].length)}return s.token}}throw new Error(`Invalid syntax in: ${this.getCurrentLine()}`)}setState(e){if(void 0===this.states[e])throw new Error(`Cannot set the unknown state [${e}]`);this.state=e,this.getState().isTrackingNextIndentation&&(this.shouldTrackNextIndentation=!0)}setInput(e){this.originalText=e.replace(/(\r\n)/g,"\n").replace(/\r/g,"\n").replace(/[\n\r]+$/,""),this.lines=this.originalText.split("\n"),this.reset()}getState(){return this.states[this.state]}getCurrentLine(){return this.lines[this.yylineno-1]}getCurrentLineIndentation(){return this.getCurrentLine().match(/^(\s*)/g)[0].length}getLastRecordedIndentation(){return 0===this.indentation.length?[0,!1]:this.indentation[this.indentation.length-1]}isAtTheEndOfText(){return this.isAtTheEndOfLine()&&this.yylloc.first_line>=this.lines.length}isAtTheEndOfLine(){return this.yylloc.last_column>this.getCurrentLine().length}},we.yy=E,we.yy.declarations={},we.yy.parseError=function(e){throw e},we.yy.registerDeclaration=function(e,t,n){if(!this.areDeclarationsHandled){if(this.declarations[e])throw new Error(`Duplicate declaration found for variable: ${e}`);this.declarations[e]={variableName:e,expression:t,explicitType:n}}};class ve{}class Ae extends ve{constructor(e,t=!0,n=[],s){super(),this.text=e,this.isAvailable=t,this.hashtags=n,this.metadata=s}}var Ce={Result:ve,TextResult:class extends ve{constructor(e,t,n){super(),this.text=e,this.hashtags=t,this.metadata=n}},CommandResult:class extends ve{constructor(e,t,n){super(),this.command=e,this.hashtags=t,this.metadata=n}},OptionsResult:class extends ve{constructor(e,t){super(),this.options=e.map((e=>new Ae(e.text,e.isAvailable,e.hashtags))),this.metadata=t}select(e=-1){if(e<0||e>=this.options.length)throw new Error(`Cannot select option #${e}, there are ${this.options.length} options`);this.selected=e}}};class ke{constructor(){this.data={}}set(e,t){this.data[e]=t}get(e){return this.data[e]}}const $e=E.types;var Le={Runner:class{constructor(){this.yarnNodes={},this.variables=new ke,this.functions={},this.visited={},this.registerFunction("visited",(e=>!!this.visited[e]))}load(e){if(!e)throw new Error("No dialogue supplied");let t=e;"string"==typeof e&&(t=function(e){const t=[],n=e.split(/\r?\n+/).filter((e=>!e.match(/^\s*$/)));let s,i=null,a=!1,o=0;for(;"#"===n[o][0]||!n[o].trim();)s||(s=[]),s.push(n[o].substr(1).trim()),o+=1;for(;o<n.length;o+=1)if("==="===n[o].trim())a=!1,s&&(i.filetags=s),t.push(i),i=null;else if(a)i.body+=`${n[o]}\n`;else if("---"===n[o].trim())a=!0,i.body="";else if(n[o].indexOf(":")>-1){const[e,t]=n[o].split(":"),s=e.trim(),a=t.trim();if("body"!==s){if(null==i&&(i={}),i[s])throw new Error(`Duplicate tag on node: ${s}`);i[s]=a}}return t}(e)),t.forEach((e=>{if(!e.title)throw new Error(`Node needs a title: ${JSON.stringify(e)}`);if(e.title.split(".").length>1)throw new Error(`Node title cannot contain a dot: ${e.title}`);if(!e.body)throw new Error(`Node needs a body: ${JSON.stringify(e)}`);if(this.yarnNodes[e.title])throw new Error(`Duplicate node title: ${e.title}`);this.yarnNodes[e.title]=e})),we.yy.areDeclarationsHandled=!1,we.yy.declarations={},this.handleDeclarations(t),we.yy.areDeclarationsHandled=!0}setVariableStorage(e){if("function"!=typeof e.set||"function"!=typeof e.get)throw new Error('Variable Storage object must contain both a "set" and "get" function');this.variables=e}handleDeclarations(e){const t={Number:0,String:"",Boolean:!1},n=e.reduce(((e,t)=>[...e,...t.body.split(/\r?\n+/)]),[]).reduce(((e,t)=>t.match(/^<<declare .+>>/)?[...e,t]:e),[]);n.length&&we.parse(n.join("\n")),Object.entries(we.yy.declarations).forEach((([e,{expression:n,explicitType:s}])=>{const i=this.evaluateExpressionOrLiteral(n);if(s&&typeof i!=typeof t[s])throw new Error(`Cannot declare value ${i} as type ${s} for variable ${e}`);this.variables.get(e)||this.variables.set(e,i)}))}registerFunction(e,t){if("function"!=typeof t)throw new Error("Registered function must be...well...a function");this.functions[e]=t}*run(e){let t=e;for(;t;){const n=this.yarnNodes[t];if(void 0===n)throw new Error(`Node "${e}" does not exist`);this.visited[e]=!0;const s=Array.from(we.parse(n.body)),i=l({},n);delete i.body;const a=yield*this.evalNodes(s,i);t=a&&a.jump}}*evalNodes(e,t){let n=[],s=null,i="";const a=e.filter(Boolean);for(let e=0;e<a.length;e+=1){const o=a[e],r=a[e+1];if(s instanceof $e.Shortcut&&!(o instanceof $e.Shortcut)){const e=yield*this.handleShortcuts(n,t);if(e&&(e.stop||e.jump))return e;n=[]}if(o instanceof $e.Text||o instanceof $e.Expression)i+=this.evaluateExpressionOrLiteral(o).toString(),r&&o.lineNum===r.lineNum&&(r instanceof $e.Text||r instanceof $e.Expression)||(yield new Ce.TextResult(i,o.hashtags,t),i="");else if(o instanceof $e.Shortcut)n.push(o);else if(o instanceof $e.Assignment)this.evaluateAssignment(o);else if(o instanceof $e.Conditional){const e=this.evaluateConditional(o);if(e){const n=yield*this.evalNodes(e,t);if(n&&(n.stop||n.jump))return n}}else{if("JumpCommandNode"===o.type)return{jump:o.destination};if("StopCommandNode"===o.type)return{stop:!0};const e=this.evaluateExpressionOrLiteral(o.command);yield new Ce.CommandResult(e,o.hashtags,t)}s=o}if(n.length>0)return yield*this.handleShortcuts(n,t)}*handleShortcuts(e,t){const n=e.map((e=>{let t=!0;e.conditionalExpression&&!this.evaluateExpressionOrLiteral(e.conditionalExpression)&&(t=!1);const n=this.evaluateExpressionOrLiteral(e.text);return Object.assign(e,{isAvailable:t,text:n})})),s=new Ce.OptionsResult(n,t);if(yield s,"number"!=typeof s.selected)throw new Error("No option selected before resuming dialogue");{const e=n[s.selected];if(e.content)return yield*this.evalNodes(e.content,t)}}evaluateAssignment(e){const t=this.evaluateExpressionOrLiteral(e.expression),n=this.variables.get(e.variableName);if(n&&typeof n!=typeof t)throw new Error(`Variable ${e.variableName} is already type ${typeof n}; cannot set equal to ${t} of type ${typeof t}`);this.variables.set(e.variableName,t)}evaluateConditional(e){if("IfNode"===e.type){if(this.evaluateExpressionOrLiteral(e.expression))return e.statement}else{if("IfElseNode"!==e.type&&"ElseIfNode"!==e.type)return e.statement;if(this.evaluateExpressionOrLiteral(e.expression))return e.statement;if(e.elseStatement)return this.evaluateConditional(e.elseStatement)}return null}evaluateFunctionCall(e){if(this.functions[e.functionName])return this.functions[e.functionName](...e.args.map(this.evaluateExpressionOrLiteral,this));throw new Error(`Function "${e.functionName}" not found`)}evaluateExpressionOrLiteral(e){if(Array.isArray(e))return e.reduce(((e,t)=>e+this.evaluateExpressionOrLiteral(t).toString()),"");const t={UnaryMinusExpressionNode:e=>-e,ArithmeticExpressionAddNode:(e,t)=>e+t,ArithmeticExpressionMinusNode:(e,t)=>e-t,ArithmeticExpressionExponentNode:(e,t)=>e**t,ArithmeticExpressionMultiplyNode:(e,t)=>e*t,ArithmeticExpressionDivideNode:(e,t)=>e/t,ArithmeticExpressionModuloNode:(e,t)=>e%t,NegatedBooleanExpressionNode:e=>!e,BooleanOrExpressionNode:(e,t)=>e||t,BooleanAndExpressionNode:(e,t)=>e&&t,BooleanXorExpressionNode:(e,t)=>!!(e^t),EqualToExpressionNode:(e,t)=>e===t,NotEqualToExpressionNode:(e,t)=>e!==t,GreaterThanExpressionNode:(e,t)=>e>t,GreaterThanOrEqualToExpressionNode:(e,t)=>e>=t,LessThanExpressionNode:(e,t)=>e<t,LessThanOrEqualToExpressionNode:(e,t)=>e<=t,TextNode:e=>e.text,NumericLiteralNode:e=>parseFloat(e.numericLiteral),StringLiteralNode:e=>`${e.stringLiteral}`,BooleanLiteralNode:e=>"true"===e.booleanLiteral,VariableNode:e=>this.variables.get(e.variableName),FunctionResultNode:e=>this.evaluateFunctionCall(e),InlineExpressionNode:e=>e}[e.type];if(!t)throw new Error(`node type not recognized: ${e.type}`);return t(e instanceof $e.Expression?this.evaluateExpressionOrLiteral(e.expression||e.expression1):e,e.expression2?this.evaluateExpressionOrLiteral(e.expression2):e)}},TextResult:Ce.TextResult,CommandResult:Ce.CommandResult,OptionsResult:Ce.OptionsResult};function Ie(e,t){e.markup=[],function(e){const t=e.text.match(/^(\S+):\s+/);t&&(e.text=e.text.replace(t[0],""),e.markup.push({name:"character",properties:{name:t[1]}}))}(e),function(e,t){const n=[];let s=!1;const i=/(^|[^\\])\[(.*?[^\\])\](.|$)/;let a=e.text,o="",r=a.match(i);for(;r;){const{index:e}=r,[d,c,u,h]=r,p=/\s/.test(c),m=/\s/.test(h),x=l(l({},Re(u,t)),{},{position:o.length+e+c.length});if(s&&"nomarkup"!==x.name)o+=a.slice(0,e+d.length-1),a=a.slice(e+d.length-1);else{const t="select"===x.name||"plural"===x.name||"ordinal"===x.name,s=!t&&x.isSelfClosing&&x.properties&&!1!==x.properties.trimwhitespace&&(0===e&&m||p&&m);x.properties&&delete x.properties.trimwhitespace;const r=c+(x.replacement||"")+(s?h.slice(1):h);a=a.replace(i,r),o+=a.slice(0,e+r.slice(1).length),a=a.slice(e+r.slice(1).length),t||"nomarkup"===x.name||n.push(x)}"nomarkup"===x.name&&(s=!x.isClosing),r=a.match(i)}e.text=o+a;const d=/\\(\[|\])/;r=e.text.match(d),a=e.text,o="";for(;r;){const e=r[1];n.forEach((e=>{e.position>o.length+r.index&&(e.position-=1)})),a=a.replace(d,e),o+=a.slice(0,r.index+1),a=a.slice(r.index+1),r=a.match(d)}e.text=o+a;const c={};n.forEach((t=>{if(c[t.name]||(c[t.name]=[]),t.isClosing&&!c[t.name].length)throw new Error(`Encountered closing ${t.name} tag before opening tag`);if(t.isClosing){const n=c[t.name].pop();e.markup.push({name:n.name,position:n.position,properties:n.properties,length:t.position-n.position})}else if(t.isSelfClosing)e.markup.push({name:t.name,position:t.position,properties:t.properties,length:0});else if(t.isCloseAll){const n=Object.values(c).flat();for(;n.length;){const s=n.pop();e.markup.push({name:s.name,position:s.position,properties:s.properties,length:t.position-s.position})}}else c[t.name].push({name:t.name,position:t.position,properties:t.properties})}))}(e,t)}function Re(e,t){const n=e.match(/^\/?([^\s=/]+)(\/|\s|$)/),s="/"===e[0],i="/"===e[e.length-1];if("/"===e)return{name:"closeall",isCloseAll:!0};if(s)return{name:n[1],isClosing:!0};{const s=(n?e.replace(n[0],""):e).match(/(\S+?".*?"|[^\s/]+)/g);let a={};s&&(a=s.reduce(((e,t)=>l(l({},e),function(e){const[t,...n]=e.split("="),s=n.join("=");if(!t||!s)throw new Error(`Invalid markup property assignment: ${e}`);let i;i="true"===s||"false"===s?"true"===s:/^-?\d*\.?\d+$/.test(s)?+s:'"'===s[0]&&'"'===s[s.length-1]?s.slice(1,-1):s;return{[t]:i}}(t))),{}));const o=n&&n[1]||Object.keys(a)[0];let r;return"select"===o?r=function(e){return e[e.value]}(a):"plural"===o?r=function(e,t){return e[new Intl.PluralRules(t).select(e.value)].replaceAll("%",e.value)}(a,t):"ordinal"===o&&(r=function(e,t){return e[new Intl.PluralRules(t,{type:"ordinal"}).select(e.value)].replaceAll("%",e.value)}(a,t)),{name:o,properties:a,isSelfClosing:i,replacement:r}}}class Se{constructor({dialogue:e,variableStorage:t,functions:n,handleCommand:s,combineTextAndOptionsResults:i,locale:a,startAt:o="Start"}){this.handleCommand=s,this.combineTextAndOptionsResults=i,this.bondage=Le,this.bufferedNode=null,this.currentResult=null,this.history=[],this.locale=a;const r=new Le.Runner;if("string"==typeof e){const t=e.split("\n"),n=t.find((e=>"---"===e.trim())).match(/\s*/)[0];e=t.map((e=>e.replace(n,""))).join("\n")}r.load(e),t&&(t.display=t.display||t.get,r.setVariableStorage(t)),n&&Object.entries(n).forEach((e=>{r.registerFunction(...e)})),this.generator=r.run(o),this.advance()}advance(e){void 0!==e&&this.currentResult&&this.currentResult.select&&this.currentResult.select(e);let t=this.bufferedNode||this.generator.next().value,n=null;if(this.handleCommand)for(;t instanceof Le.CommandResult;)this.handleCommand(t),t=this.generator.next().value;if(!(t instanceof Le.OptionsResult)){const e=this.generator.next();n=e.value,t instanceof Le.TextResult&&this.combineTextAndOptionsResults&&n instanceof Le.OptionsResult?(t=Object.assign(n,t),n=null):e.done&&(t=Object.assign(t,{isDialogueEnd:!0}))}this.currentResult&&this.history.push(this.currentResult),t instanceof Le.TextResult?Ie(t,this.locale):t instanceof Le.OptionsResult&&(t.text&&Ie(t,this.locale),t.options.forEach((e=>{Ie(e,this.locale)}))),this.currentResult=t,this.bufferedNode=n}}const{OptionsResult:_e,TextResult:qe,CommandResult:Me}=Le;Se.OptionsResult=_e,Se.TextResult=qe,Se.CommandResult=Me,e.DialogueNode=i,e.default=function({dialogue:e,startAt:n="Start",functions:i,variableStorage:a,handleCommand:r,combineTextAndOptionsResults:l=!0,onDialogueEnd:d=(()=>{}),defaultOption:c="Next"}){const u=t.useMemo((()=>new Se({dialogue:e,startAt:n,functions:i,variableStorage:a,handleCommand:r,combineTextAndOptionsResults:l})),[e]);t.useEffect((()=>{u.combineTextAndOptionsResults=l,u.handleCommand=r,u.variableStorage=a}),[l,r,a]);const h=function(){const[e,n]=t.useState(0);return()=>n((e=>e+1))}(),p=t.useCallback((e=>{u.advance(e),h(),u.currentResult.isDialogueEnd&&d()}),[u]);return s.default.createElement(o,{className:"mnbroatch-react-dialogue-tree",currentResult:u.currentResult,history:u.history,advance:p,defaultOption:c})},Object.defineProperty(e,"__esModule",{value:!0})}));
